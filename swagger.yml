#(C) Copyright 2017-2018 Hewlett Packard Enterprise Development LP
swagger: '2.0'
info:
  version: '1.0.0'
  title: HPE OneSphere API
  description: |+
    HPE OneSphere hybrid cloud management REST API.
    For calls requiring authentication use /rest/session to get a token.
  #TODO Change this url to HPE's terms and condition url
  termsOfService: http://www.hpe.com/onesphere
  contact:
    name: HPE OneSphere API team
    url: http://www.hpe.com/onesphere
host: localhost:5556
basePath: /rest
schemes:
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
security:
  - Bearer: []
consumes:
- application/json
- application/vnd.hpe+json
- application/vnd.hpe.v1+json
definitions:
  account:
    properties:
      created:
        format: date-time
        type: string
      events:
        items:
          $ref: '#/definitions/event'
        type: array
      id:
        type: string
      metrics:
        items:
          $ref: '#/definitions/metric'
        type: array
      modified:
        format: date-time
        type: string
      name:
        type: string
      uri:
        type: string
    required:
    - id
    - name
    - uri
    type: object
  appliance:
    description: The definition of an appliance.
    properties:
      created:
        description: |
          Date and time when the resource was created.
        format: date-time
        readOnly: true
        type: string
      endpoint:
        $ref: '#/definitions/applianceEndpoint'
      l2networks:
        description: |
          The set of Layer 2 networks available on this appliance for use by zones
        items:
          $ref: '#/definitions/applianceL2Network'
        readOnly: true
        type: array
      modified:
        description: |
          Date and time when the resource was last modified.
        format: date-time
        readOnly: true
        type: string
      name:
        description: |
          Name of this appliance.
          The name of this appliance must be unique among all appliances
          registered via this API.
        type: string
      regionUri:
        description: |
          The URI of the parent 'region' of this appliance.
          The regionURI is limited to URI-safe characters.
        type: string
      state:
        description: |
          The current state of this appliance.
        enum:
        - Enabling
        - Enabled
        - Disabling
        - Unknown
        readOnly: true
        type: string
      status:
        description: |
          The current status of this appliance.
        enum:
        - OK
        - Warning
        - Critical
        - Unknown
        readOnly: true
        type: string
      type:
        description: |
          The type of appliance.
        enum:
        - Synergy
        type: string
      uri:
        description: |
          The URI of this appliance. The URI is automatically generated when the
          appliance is created and cannot be modified.
        readOnly: true
        type: string
    required:
    - name
    - endpoint
    - regionUri
    - type
    type: object
  applianceEndpoint:
    description: |
      The set of endpoint used for communicating and managing this appliance.
    properties:
      address:
        description: |
          The hostname or IP address of this appliance endpoint.
        type: string
      password:
        description: The password for this appliance endpoint.
        type: string
      username:
        description: The username for this appliance endpoint.
        type: string
    required:
    - address
    - username
    - password
    type: object
  applianceL2Network:
    description: |
      A Layer 2 network available on this appliance for use by zones
    properties:
      ethernetNetworkType:
        description: |
          The type of the network
        enum:
        - Tagged
        - Untagged
        type: string
      name:
        description: |
          The name of the network
        type: string
      purpose:
        description: |
          The purpose of the network
        enum:
        - FaultTolerance
        - General
        - ISCSI
        - Management
        - VMMigration
        type: string
      uri:
        description: |
          The URI of the network
        readOnly: true
        type: string
      vlanId:
        description: |
          For networks of type Tagged, the VLAN-id of the network
        type: integer
    type: object
  applianceList:
    description: Result of a query to get appliances.
    properties:
      members:
        items:
          $ref: '#/definitions/appliance'
        type: array
      total:
        format: int64
        type: integer
    required:
    - members
    - total
    type: object
  azureLoginProperties:
    properties:
      authHost:
        readOnly: true
        type: string
      authType:
        readOnly: true
        type: string
      clientId:
        readOnly: true
        type: string
      prompt:
        readOnly: true
        type: string
      resource:
        readOnly: true
        type: string
      responseMode:
        readOnly: true
        type: string
      responseType:
        readOnly: true
        type: string
    type: object
  azureProviderInfo:
    properties:
      familyName:
        description: |
          Needed for `POST /rest/providers` type azure
          In the Azure portal, this can be mapped to `Last name`
        readOnly: true
        type: string
      givenName:
        description: |
          Needed for `POST /rest/providers` type azure
          In the Azure portal, this can be mapped to `First name`
        readOnly: true
        type: string
      tenantId:
        description: |
          Needed for `POST /rest/providers` type azure
          The Azure Directory UUID associated with the Subscription
          Using the Azure CLI, tenantId can be found with:
          az account show --query 'tenantId' -o tsv
        readOnly: true
        type: string
      uniqueName:
        description: |
          Needed for `POST /rest/providers` type azure
          In the Azure portal, this can be mapped to `User name`
        readOnly: true
        type: string
    type: object
  azureSubscription:
    properties:
      canAdd:
        description: If true, the subscription can be added as a provider by the Azure
          user
        readOnly: true
        type: boolean
      id:
        description: Azure Subscription ID
        readOnly: true
        type: string
      name:
        description: Azure display name
        readOnly: true
        type: string
      roles:
        description: |
          An array of strings that map the the name of the role definition the app has on a subscription.
          NOTE: The only accepted role definition at this time is Reader
        items:
          type: string
        type: array
      uri:
        readOnly: true
        type: string
    required:
    - roles
    type: object
  azureSubscriptionList:
    properties:
      count:
        format: int64
        type: integer
      members:
        items:
          $ref: '#/definitions/azureSubscription'
        type: array
      start:
        format: int64
        type: integer
      total:
        format: int64
        type: integer
    required:
    - members
    - total
  billing-account:
    properties:
      apiAccessKey:
        description: The Azure API Access Key for the Enterprise Enrollment Number,
          only for providerTypeUri of /rest/provider-types/azure. Not returned on
          GET
        type: string
      created:
        description: |
          Date and time when the billing account was created.
        format: date-time
        readOnly: true
        type: string
      description:
        description: description of the billing account
        type: string
      directoryUri:
        description: The Azure Directory URI for the Enterprise Enrollment Number,
          only for providerTypeUri of /rest/provider-types/azure
        type: string
      enrollmentNumber:
        description: The Azure Enterprise Enrollment Number, only for providerTypeUri
          of /rest/provider-types/azure
        type: string
      id:
        type: string
      modified:
        description: |
          Date and time when the billing account was last modified.
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      providerTypeUri:
        description: /rest/provider-types/azure is the only valid values for providerTypeUri
        type: string
      providerUris:
        description: providers that use this billing account. Requires `view=full`
        items:
          type: string
        type: array
      uri:
        type: string
    required:
    - id
    - name
    - uri
    - providerTypeUri
    type: object
  billingAccountList:
    properties:
      count:
        format: int64
        type: integer
      members:
        items:
          $ref: '#/definitions/billing-account'
        type: array
      start:
        format: int64
        type: integer
      total:
        format: int64
        type: integer
    required:
    - members
    - start
    - count
    - total
  catalog:
    properties:
      catalogTypeUri:
        type: string
      created:
        format: date-time
        type: string
      id:
        type: string
      message:
        type: string
      modified:
        format: date-time
        type: string
      name:
        type: string
      protected:
        type: boolean
      serviceTypeUri:
        type: string
      servicesCount:
        type: integer
      state:
        enum:
        - Enabled
        - Disabled
        type: string
      status:
        type: string
      uri:
        type: string
      url:
        type: string
    required:
    - id
    - name
    - uri
    - url
    - protected
    type: object
  catalogList:
    properties:
      members:
        items:
          $ref: '#/definitions/catalog'
        type: array
      total:
        format: int64
        type: integer
    required:
    - members
    - total
  catalogType:
    description: Identifies the type of the catalog source. This type determines the
      API to be used to interact with the source
    properties:
      id:
        enum:
        - aws-az
        - vcenter
        - kvm
        - helm-charts-repository
        - docker-hub
        - docker-registry
        - docker-trusted-registry
        - private-docker-registry
        - amazon-ecr
        - azure-container-registry
        - hpe-managed
        type: string
      name:
        enum:
        - AWS Private Images
        - VMware Templates
        - KVM Images
        - Kubernetes Apps
        - Docker Hub
        - Docker Hub Trusted Registry
        - Docker Registry
        - Private Docker Registry
        - AWS ECR Containers
        - Azure Container Registry
        - HPE Catalog
        type: string
      uri:
        enum:
        - /rest/catalog-types/aws-az
        - /rest/catalog-types/vcenter
        - /rest/catalog-types/kvm
        - /rest/catalog-types/helm-charts-repository
        - /rest/catalog-types/docker-hub
        - /rest/catalog-types/docker-registry
        - /rest/catalog-types/docker-trusted-registry
        - /rest/catalog-types/private-docker-registry
        - /rest/catalog-types/amazon-ecr
        - /rest/catalog-types/azure-container-registry
        - /rest/catalog-types/hpe-managed
        type: string
    required:
    - id
    - name
    - uri
    type: object
  catalogTypeList:
    properties:
      members:
        items:
          $ref: '#/definitions/catalogType'
        type: array
      total:
        format: int64
        type: integer
    required:
    - members
    - total
  childProvider:
    properties:
      id:
        type: string
      name:
        type: string
      providerTypeUri:
        type: string
      state:
        enum:
        - Adding
        - Available
        - Disabling
        - Removing
        - Unknown
        type: string
      status:
        enum:
        - OK
        - Warning
        - Critical
        - Disabled
        - Unknown
        type: string
      uri:
        type: string
    required:
    - id
    - name
    - status
    - state
    - providerTypeUri
    - uri
    type: object
  cluster:
    properties:
      created:
        format: date-time
        type: string
      id:
        type: string
      modified:
        format: date-time
        type: string
      projectUri:
        type: string
      regionUri:
        type: string
      status:
        type: string
      uri:
        type: string
    required:
    - id
    - regionUri
    - uri
    - projectUri
    type: object
  clusterList:
    properties:
      members:
        items:
          $ref: '#/definitions/cluster'
        type: array
      total:
        format: int64
        type: integer
    required:
    - members
    - total
  createAppliance:
    description: Properties required for creation of a new appliance.
    properties:
      endpoint:
        $ref: '#/definitions/applianceEndpoint'
      name:
        description: |
          Name of this appliance.
          The name of this appliance must be unique among all appliances
          registered via this API.
        type: string
      regionUri:
        description: |
          The URI of the parent 'region' of this appliance.
          The regionURI is limited to URI-safe characters.
        type: string
      type:
        description: |
          The type of appliance.
        enum:
        - Synergy
        type: string
    required:
    - name
    - endpoint
    - regionUri
    - type
    type: object
  createBillingAccount:
    properties:
      apiAccessKey:
        description: The Azure API Access Key for the Enterprise Enrollment Number,
          required for providerTypeUri of /rest/provider-types/azure
        type: string
      description:
        description: description of the billing account
        type: string
      directoryUri:
        description: The Azure Directory URI for the Enterprise Enrollment Number,
          only for providerTypeUri of /rest/provider-types/azure
        type: string
      enrollmentNumber:
        description: The Azure Enterprise Enrollment Number, required for providerTypeUri
          of /rest/provider-types/azure
        type: string
      name:
        type: string
      providerTypeUri:
        description: /rest/provider-types/azure is the only valid values for providerTypeUri
        type: string
    required:
    - name
    - providerTypeUri
    type: object
  createCatalog:
    description: |
      The source of services like Helm charts, docker images, VM images. Some
       of the catalog sources are automatically added as part of the provider
       onboarding process. These inclue VMware, AWS and KVM.
    properties:
      accessKey:
        description: Applicable only for Amazon EC2 Container Registry
        type: string
      catalogTypeUri:
        enum:
        - /rest/catalog-types/aws-az
        - /rest/catalog-types/vcenter
        - /rest/catalog-types/kvm
        - /rest/catalog-types/helm-charts-repository
        - /rest/catalog-types/docker-hub
        - /rest/catalog-types/docker-registry
        - /rest/catalog-types/docker-trusted-registry
        - /rest/catalog-types/private-docker-registry
        - /rest/catalog-types/amazon-ecr
        - /rest/catalog-types/azure-container-registry
        - /rest/catalog-types/hpe-managed
        example: /rest/service-types/helm-charts-repository
        type: string
      name:
        example: Kubernetes Charts
        type: string
      password:
        description: |
          Applicable only for docker trusted registry and private docker registry
        type: string
      secretKey:
        description: Applicable only for Amazon EC2 Container Registry
        type: string
      url:
        example: https://kubernetes-charts-incubator.storage.googleapis.com
        type: string
      username:
        description: |
          Applicable only for docker trusted registry and private docker registry
        type: string
      zoneUri:
        description: K8s Zone to which services from this catalog can be deployed.
        example: /rest/zones/923b3fdf-c043-44ca-9b07-dd6ce14c0f0b
        type: string
    required:
    - name
    - url
    - catalogTypeUri
    type: object
  createDeployment:
    properties:
      assignExternalIP:
        type: boolean
      firewall:
        items:
          properties:
            allowedIPs:
              description: CIDR for allowed IPs
              type: string
            ports:
              items:
                type: integer
              type: array
          type: object
        type: array
      k8sDeploymentRegion:
        description: The region to which K8S cluster will be deployed.
        type: string
      k8sDomainUri:
        description: Indicates the domain to be used for the  Kubernetes cluster.
          Supported only for Kubernetes cluster.
        type: string
      k8sMasterFlavor:
        description: Flavor for creating master nodes of K8S cluster.
        type: string
      k8sNumMasters:
        description: The total number of master for creating K8S cluster.
        type: string
      k8sWorkerFlavor:
        description: Flavor for creating worker nodes of K8S cluster.
        type: string
      k8snumWorkers:
        description: The total number of workers for creating K8S cluster.
        type: string
      name:
        type: string
      networks:
        items:
          properties:
            networkUri:
              type: string
          type: object
        type: array
      projectUri:
        type: string
      publicKey:
        description: public ssh-key
        type: string
      regionUri:
        type: string
      serviceUri:
        type: string
      userData:
        description: base64 encoded userdata
        type: string
      version:
        description: |
          version string for the container/chart that needs to be deployed. If not specified, picks up the first one from the versions array of the service.
        type: string
      virtualMachineProfileUri:
        type: string
      zoneUri:
        type: string
    required:
    - name
    - serviceUri
    - projectUri
    type: object
  createProject:
    properties:
      description:
        type: string
      name:
        type: string
      tagUris:
        description: |
          This pattern of tags only works for tags that already exist. Something would need to be added to handle creating tags in conjunction with creating a project.
        items:
          type: string
        type: array
    required:
    - name
    type: object
  createProvider:
    properties:
      accessKey:
        description: only for /rest/provider-types/aws
        type: string
      billingAccountUri:
        description: The URI of the billing account that contains the Azure Entriprise
          Agreement to which the Azure Subscription belongs. Only for /rest/provider-types/azure
        type: string
      directoryUri:
        description: The name of the Azure active directory that contains the subscription.
          Only for /rest/provider-types/azure
        type: string
      familyName:
        description: The family name of the Azure user adding the Azure Subscription.
          Only for /rest/provider-types/azure
        type: string
      givenName:
        description: The given name of the Azure user adding the Azure Subscription.
          Only for /rest/provider-types/azure
        type: string
      id:
        description: id is mandatory only for Member provider's which are Disabled
          and creds are empty
        type: string
      masterUri:
        description: This is deprecated. Use only for /rest/provider-types/aws when
          paymentProvider = false when state is Disabled and creds are empty.
        type: string
      paymentProvider:
        description: This is deprecated. Use only for /rest/provider-types/aws  when
          state is Disabled and creds are empty.
        type: boolean
      providerTypeUri:
        type: string
      s3CostBucket:
        description: only for /rest/provider-types/aws when paymentProvider = true
        type: string
      secretKey:
        description: only for /rest/provider-types/aws
        type: string
      state:
        description: Initial state of the provider. If marked Enabling/Enabled the
          secretkey and accesskey will be validated.
        enum:
        - Enabled
        - Disabled
        type: string
      subscriptionId:
        description: The Azure Subscription ID. Only for /rest/provider-types/azure
        type: string
      tenantId:
        description: The id of the Azure active directory that contains the subscription.
          Only for /rest/provider-types/azure
        type: string
      uniqueName:
        description: The unique name of the Azure user adding the Azure Subscription.
          Only for /rest/provider-types/azure
        type: string
    required:
    - providerTypeUri
    - state
    type: object
  createRegion:
    properties:
      location:
        $ref: '#/definitions/regionLocation'
      name:
        type: string
      providerUri:
        type: string
    required:
    - name
    - providerUri
    type: object
  createRegionConnection:
    description: Properties required for creation of a new region connection.
    properties:
      endpointUuid:
        description: UUID of connection endpoint.
        type: string
      location:
        $ref: '#/definitions/vcenterSettings'
      name:
        type: string
      state:
        description: Initial state of this region connection.
        enum:
        - Enabling
        - Enabled
        - Disabling
        - Disabled
        type: string
      uri:
        description: |
          The URI of this connection
        readOnly: true
        type: string
    required:
    - endpointUuid
    - name
    - location
    - state
    type: object
  createServer:
    description: |
      A server that is being managed and/or monitored by HPE OneSphere.
    properties:
      applianceUri:
        description: |
          The URI of 'appliance' in which this server is located.
          The applianceURI is limited to URI-safe characters.
        type: string
      coreCount:
        description: Total number of cores.
        type: integer
      coreSpeedMHz:
        description: Core speed in MHz
        type: integer
      cpuModel:
        description: CPU model name
        type: string
      externalIds:
        description: |
          A set of unique identifiers that have been assigned externally to
          this server, i.e. these IDs have not been generated by HPE OneSphere.
        items:
          description: Unique identifier that has been assigned externally to this
            server.
          properties:
            type:
              description: Type of external ID.
              type: string
            value:
              description: External ID value
              type: string
          type: object
        type: array
      memoryGB:
        description: Amount of memory in Gigabytes.
        type: integer
      name:
        description: |
          Name of this server.
        type: string
      processorCount:
        description: Number of processors
        type: integer
      projectUri:
        description: |
          The URI of a 'project' to which this has been allocated.
          Costs for this server will included in the costs calculation
          for this project.
          The projectURI is limited to URI-safe characters.
        type: string
      regionUri:
        description: |
          The URI of 'region' in which this server is located.
          The regionURI is limited to URI-safe characters.
        type: string
      serverModel:
        description: Server model name
        type: string
      state:
        description: |
          The current state of this server.
        enum:
        - Enabling
        - Enabled
        - Disabling
        - Disabled
        type: string
      zoneUri:
        description: |
          The URI of 'zone' in which this server is located.
          The zoneURI is limited to URI-safe characters.
        type: string
    required:
    - name
    - state
    type: object
  createSession:
    properties:
      password:
        type: string
      userName:
        type: string
    required:
    - userName
    - password
    type: object
  createTag:
    properties:
      name:
        type: string
      tagKeyUri:
        type: string
    required:
    - tagKeyUri
    - name
    type: object
  createTagKey:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  createUser:
    properties:
      email:
        description: Must be email address
        type: string
      name:
        description: User's display name
        type: string
      password:
        description: Password must be at least 8 characters long.
        type: string
      role:
        $ref: '#/definitions/systemRole'
    required:
    - email
    - name
    - password
    - role
    type: object
  createVolume:
    properties:
      name:
        type: string
      projectUri:
        type: string
      sizeGiB:
        type: integer
      zoneUri:
        type: string
    required:
    - name
    - sizeGiB
    - projectUri
    - zoneUri
    type: object
  createZone:
    properties:
      applianceUri:
        description: |
          If zone is targetted at an appliance, the URI of the appliance.
        type: string
      name:
        type: string
      networkSettings:
        $ref: '#/definitions/networkSettings'
      providerUri:
        type: string
      rates:
        items:
          $ref: '#/definitions/zone_rate'
        type: array
      regionUri:
        type: string
      resourceCapacity:
        $ref: '#/definitions/resourceCapacity'
      resourceProfile:
        $ref: '#/definitions/resourceProfile'
      vcenterSettings:
        $ref: '#/definitions/vcenterSettings'
      zoneTypeUri:
        enum:
        - /rest/zone-types/vcenter
        - /rest/zone-types/kvm
        type: string
    required:
    - name
    - providerUri
    - regionUri
    - zoneTypeUri
    type: object
  createZoneConnection:
    properties:
      location:
        $ref: '#/definitions/vcenterSettings'
      name:
        type: string
      state:
        enum:
        - Enabling
        - Enabled
        - Disabling
        - Disabled
        type: string
      uuid:
        description: |
          UUID of connection endpoint
        type: string
    required:
    - uuid
    - name
    - location
    - state
    type: object
  datastore:
    properties:
      created:
        format: date-time
        type: string
      error:
        $ref: '#/definitions/error'
      id:
        type: string
      modified:
        format: date-time
        type: string
      name:
        type: string
      sizeGiB:
        format: float
        type: number
      state:
        enum:
        - Enabling
        - Enabled
        - Disabling
        - Disabled
        - Unknown
        type: string
      status:
        enum:
        - OK
        - Warning
        - Critical
        - Disabled
        - Unknown
        type: string
      type:
        type: string
    type: object
  deployment:
    properties:
      activeUsers:
        items:
          $ref: '#/definitions/user'
        type: array
      clusterUri:
        description: The Kubernetes cluster where this is deployed, if this is a container
          or chart
        type: string
      cpuCount:
        type: integer
      cpuGhz:
        type: integer
      created:
        format: date-time
        type: string
      diskSizeGB:
        format: int64
        type: integer
      endpoints:
        description: For containers it will have the endpoints of the applications
          in the container. For VM, it will be IP addresses.
        items:
          $ref: '#/definitions/endpoint'
        type: array
      errorMessage:
        type: string
      events:
        items:
          $ref: '#/definitions/event'
        type: array
      firewall:
        items:
          properties:
            allowedIPs:
              description: CIDR for allowed IPs
              type: string
            ports:
              items:
                type: integer
              type: array
          type: object
        type: array
      hasConsole:
        description: Whether or not a console (VNC, spice, k8s, rdp) is supported
        type: boolean
      id:
        type: string
      keypairUri:
        type: string
      memorySizeGB:
        format: int64
        type: integer
      modified:
        format: date-time
        type: string
      name:
        type: string
      projectUri:
        type: string
      region:
        properties:
          id:
            type: string
          name:
            type: string
          uri:
            type: string
        required:
        - name
        - uri
        type: object
      regionUri:
        type: string
      service:
        properties:
          id:
            type: string
          name:
            type: string
          uri:
            type: string
          version:
            type: string
        required:
        - name
        - uri
        type: object
      serviceUri:
        type: string
      state:
        enum:
        - Adding
        - Removing
        - Starting
        - Started
        - Stopping
        - Stopped
        - Suspending
        - Suspended
        - Resuming
        - Unknown
        type: string
      status:
        enum:
        - OK
        - Warning
        - Critical
        - Disabled
        - Unknown
        type: string
      uri:
        type: string
      virtualMachineProfileUri:
        type: string
      volumeURIs:
        items:
          type: string
        type: array
      volumes:
        items:
          properties:
            id:
              type: string
            name:
              type: string
            sizeGiB:
              type: integer
            status:
              type: string
            uri:
              type: string
          required:
          - name
          - uri
          - status
          - sizeGiB
          type: object
        type: array
      zoneUri:
        type: string
    required:
    - id
    - name
    - zoneUri
    - service
    - status
    - uri
    - projectUri
    type: object
  deploymentAction:
    properties:
      force:
        description: |
          if true, a restart or stop doesn't gracefully shutdown the operating system
        type: boolean
      type:
        enum:
        - restart
        - resume
        - start
        - stop
        - suspend
        type: string
    required:
    - type
    type: object
  deploymentList:
    properties:
      members:
        items:
          $ref: '#/definitions/deployment'
        type: array
      total:
        format: int64
        type: integer
    required:
    - members
    - total
  endpoint:
    properties:
      address:
        description: endpoint address value of the deployment
        example: 34.236.43.211
        type: string
      addressType:
        description: type of the deployment endpoint address
        enum:
        - floating
        - fixed
        - url
        type: string
      name:
        description: name of the network endpoint if any
        example: Dev-VM Network
        type: string
    required:
    - address
    type: object
  error:
    properties:
      canForce:
        type: boolean
      data:
        type: string
      details:
        type: string
      errorCode:
        type: string
      errorSource:
        type: string
      message:
        type: string
      nestedErrors:
        type: string
      recommendedActions:
        items:
          type: string
        type: array
    required:
    - message
    - details
    type: object
  esxCluster:
    properties:
      created:
        format: date-time
        type: string
      datastores:
        description: A List of datastore.
        items:
          $ref: '#/definitions/datastore'
        type: array
      error:
        $ref: '#/definitions/error'
      id:
        type: string
      modified:
        format: date-time
        type: string
      name:
        type: string
      state:
        enum:
        - Enabling
        - Enabled
        - Disabling
        - Disabled
        - Unknown
        type: string
      status:
        enum:
        - OK
        - Warning
        - Critical
        - Disabled
        - Unknown
        type: string
    type: object
  event:
    properties:
      created:
        format: date-time
        type: string
      id:
        type: string
      modified:
        format: date-time
        type: string
      name:
        type: string
      resourceUri:
        description: The resource this metric is associated with. It could be a provider,
          a deployment, a region, a tag, etc.
        example: /rest/providers/85609a9e-31f5-4c7b-bd54-1ba50136bdf6
        type: string
      uri:
        type: string
      userId:
        type: string
    required:
    - id
    - name
    - resourceUri
    - uri
    type: object
  eventList:
    properties:
      members:
        items:
          $ref: '#/definitions/event'
        type: array
      total:
        format: int64
        type: integer
    required:
    - members
    - total
  ipPool:
    properties:
      endIP:
        type: string
      purpose:
        enum:
        - vm-ipam
        - k8s-loadbalancer-ipam
        type: string
      startIP:
        type: string
    required:
    - startIP
    - endIP
    - purpose
    type: object
  keypair:
    properties:
      fingerprint:
        description: Short sequence of identifying bytes
        type: string
      id:
        type: string
      uri:
        type: string
    type: object
  keypairList:
    properties:
      members:
        items:
          $ref: '#/definitions/keypair'
        type: array
      total:
        format: int64
        type: integer
  kvmServer:
    description: A server that is being managed and/or monitored by HPE OneSphere
      as kvm server
    properties:
      created:
        format: date-time
        type: string
      datastores:
        description: A List of volumes.
        items:
          $ref: '#/definitions/datastore'
        type: array
      error:
        $ref: '#/definitions/error'
      modified:
        format: date-time
        type: string
      name:
        description: |
          The name of kvm-server
        type: string
      roles:
        description: |
          Roles represent the roles applied on the KVM server
        items:
          description: |
            Represents allowed Role names
          enum:
          - ImageLibrary
          - BlockStorage
          type: string
        type: array
      serverUri:
        description: |
          The URI of 'server' in which this kvm server is located.
          The serverURI is limited to URI-safe characters.
        type: string
      state:
        description: |
          The state represents operational state within HPEOneSphere
        enum:
        - Enabling
        - Enabled
        - Disabling
        - Disabled
        - Unknown
        type: string
      status:
        enum:
        - OK
        - Warning
        - Critical
        - Unknown
        type: string
    type: object
  membership:
    description: Either userUri or groupUri is required, not both.
    properties:
      groupUri:
        type: string
      membershipRoleUri:
        type: string
      projectUri:
        type: string
      userUri:
        type: string
    required:
    - membershipRoleUri
    - projectUri
    type: object
  membershipList:
    properties:
      members:
        items:
          $ref: '#/definitions/membership'
        type: array
      total:
        format: int64
        type: integer
    required:
    - members
    - total
  membershipRole:
    description: |
      A role that applies to a project. A user may have multiple (potentially different) membership roles on multiple project.
    enum:
    - owner
    - member
    properties:
      id:
        type: string
      name:
        type: string
      uri:
        type: string
    required:
    - id
    - name
    type: object
  membershipRoleList:
    properties:
      members:
        items:
          $ref: '#/definitions/membershipRole'
        type: array
      total:
        format: int64
        type: integer
  metric:
    properties:
      associations:
        items:
          properties:
            category:
              example: providers
              type: string
            name:
              description: A human readable name for the resource
              example: Production AWS
              type: string
            uri:
              type: string
          required:
          - category
          - name
          - uri
          type: object
        type: array
      count:
        description: Not yet implemented
        format: int64
        type: integer
      description:
        example: Availability score
        type: string
      name:
        example: score.availability
        type: string
      resource:
        description: |
          The resource this metric is associated with. It could be a provider, a deployment, a region, a tag, etc.
          resource and resourceUri are mutually exclusive.  One of these is required to be in the response.
          resource is only returned when view=full is set, otherwise resourceUri is returned.
        properties:
          name:
            example: AWS Lambda Service
            type: string
          project:
            properties:
              name:
                example: Employee Programs
                type: string
              uri:
                type: string
            required:
            - name
            type: object
          uri:
            type: string
          value:
            type: string
          zone:
            properties:
              name:
                type: string
              region:
                properties:
                  name:
                    type: string
                  provider:
                    properties:
                      name:
                        example: Amazon Web Services
                        type: string
                      providerType:
                        properties:
                          name:
                            example: AWS
                            type: string
                          uri:
                            type: string
                        required:
                        - name
                        type: object
                      uri:
                        type: string
                    required:
                    - name
                    type: object
                  uri:
                    type: string
                required:
                - name
                type: object
              uri:
                type: string
            required:
            - name
            type: object
        required:
        - value
        type: object
      resourceUri:
        description: |
          The resource this metric is associated with. It could be a provider, a deployment, a region, a tag, etc.
          resource and resourceUri are mutually exclusive.  One of these is required to be in the response.
          resourceUri is only returned when view=full is *NOT* set, otherwise resource is returned.
        example: /rest/providers/85609a9e-31f5-4c7b-bd54-1ba50136bdf6
        type: string
      start:
        description: Not yet implemented
        format: int64
        type: integer
      total:
        description: Not yet implemented
        format: int64
        type: integer
      units:
        description: |
          Supported metrics:
            - None
            - GB
            - Hz
            - cores
            - %
            - USD
        example: '%'
        type: string
      values:
        items:
          properties:
            end:
              format: date-time
              type: string
            start:
              format: date-time
              type: string
            value:
              format: float
              type: number
          required:
          - value
          type: object
        type: array
    required:
    - name
    - values
    type: object
  metricList:
    properties:
      count:
        description: Count of results in this page, currently always equal to total
        format: int64
        type: integer
      members:
        items:
          $ref: '#/definitions/metric'
        type: array
      start:
        description: Starting offset of this page of results, currently always 0
        format: int64
        type: integer
      total:
        format: int64
        type: integer
    required:
    - members
    - start
    - count
    - total
  network:
    properties:
      created:
        format: date-time
        type: string
      id:
        type: string
      modified:
        format: date-time
        type: string
      name:
        type: string
      projectUris:
        items:
          type: string
        type: array
      shared:
        description: if true, the network will be shared with all projects. The default
          value is set to "false".
        type: boolean
      subnets:
        items:
          $ref: '#/definitions/subnet'
        type: array
      uri:
        type: string
      vlan:
        format: int64
        type: integer
      zoneUri:
        type: string
    required:
    - id
    - name
    - zoneUri
    - uri
    - vlan
    - subnets
    - projectUris
    type: object
  networkList:
    properties:
      members:
        items:
          $ref: '#/definitions/network'
        type: array
      total:
        format: int64
        type: integer
    required:
    - members
    - total
  networkSettings:
    description: |
      Represents the networks associated with the zone.
    properties:
      esxManagementNetwork:
        type: string
      ncsManagementNetwork:
        type: string
      physicalNetworks:
        items:
          $ref: '#/definitions/physicalNetwork'
        type: array
      productionNetwork:
        items:
          type: string
        type: array
      storageNetwork:
        type: string
      vMotionNetwork:
        type: string
    type: object
  passwordReset:
    properties:
      password:
        description: Password must be at least 8 characters long.
        type: string
      token:
        type: string
    required:
    - password
    - token
    type: object
  passwordResetRequestInput:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  patchCatalog:
    items:
      $ref: '#/definitions/patchCatalogPatch'
    type: array
  patchCatalogPatch:
    example:
      op: add
      path: /state
      value: Enabled
    properties:
      op:
        description: |
          The operation to take on the specified property. See: https://tools.ietf.org/html/rfc6902#section-4
        enum:
        - add
        - replace
        type: string
      path:
        description: The path to the property to operate on.
        enum:
        - /name
        - /password
        - /accessKey
        - /secretKey
        - /state
        type: string
      value:
        description: The new value (valid with op=replace)
        type: object
    required:
    - op
    - path
  patchDeployment:
    items:
      $ref: '#/definitions/patchDeploymentPatch'
    type: array
  patchDeploymentPatch:
    example:
      op: add
      path: /volumes
      value:
      - op: add
        path: /volumeURIs
        value:
        - /rest/volumes/90292352-34e6-4cd6-b3f5-ea85ab68f9cb
      - op: remove
        path: /volumeURIs
        value:
        - /rest/volumes/b6a14fbf-5d9d-4254-87a5-944a7675fc9d
    properties:
      op:
        description: |
          The operation to take on the specified property. See: https://tools.ietf.org/html/rfc6902#section-4
        enum:
        - add
        - replace
        type: string
      path:
        description: The path to the property to operate on.
        enum:
        - example: test
          type: string
          value: /name
        - items:
            $ref: '#/definitions/updateDeploymentProperty'
          type: array
          value: /volumes
        - example: --replicas=20
          type: string
          value: /userData
        - example: latest
          type: string
          value: /version
        - example: 3
          type: integer
          value: /k8snumWorkers
        - example: --port=80 --targetPort=80
          type: string
          value: /serviceInput
        type: string
      value:
        description: The new value (valid with op=replace)
        type: object
    required:
    - op
    - path
  patchRegion:
    items:
      $ref: '#/definitions/patchRegionPatch'
    type: array
  patchRegionPatch:
    example:
      op: replace
      path: /name
      value: new name
    properties:
      op:
        description: |
          The operation to take on the specified property. See: https://tools.ietf.org/html/rfc6902#section-4
        enum:
        - add
        - replace
        type: string
      path:
        description: The path to the property to operate on.
        enum:
        - /name
        - /location
        type: string
      value:
        description: The new value (valid with op=replace)
        type: object
    required:
    - op
    - path
  patchVolume:
    items:
      $ref: '#/definitions/patchVolumePatch'
    type: array
  patchVolumePatch:
    example:
      op: replace
      path: /size
      value: 10
    properties:
      op:
        description: |
          The operation to take on the specified property. See: https://tools.ietf.org/html/rfc6902#section-4
        enum:
        - add
        - replace
        type: string
      path:
        description: The path to the property to operate on.
        enum:
        - /name
        - /sizeGiB
        type: string
      value:
        description: The new value (valid with op=replace)
        type: object
    required:
    - op
    - path
  physicalNetwork:
    description: Represents physical separate networks. Logical networks are created
      on physical networks. For e.g. a DVS in vCenter environment with dvUplink portgroup,
      or an OVS bridge in a KVM server with up-links configured.
    properties:
      name:
        type: string
      networkType:
        enum:
        - vmware_dvs
        - vmware_vss
        - ovs
        type: string
    required:
    - name
    - networkType
    type: object
  project:
    properties:
      created:
        format: date-time
        type: string
      deployments:
        $ref: '#/definitions/deploymentList'
        description: List of deployments in the project. Requires `view=full`
      id:
        type: string
      modified:
        format: date-time
        type: string
      name:
        type: string
      protected:
        description: If true, this project cannot be deleted or updated.
        type: boolean
      tagUris:
        description: |
          view=full adds tags as an array with objects containing tag and tag-key uris and names.
        items:
          type: string
        type: array
      uri:
        type: string
    required:
    - id
    - name
    - uri
    type: object
  projectList:
    properties:
      members:
        items:
          $ref: '#/definitions/project'
        type: array
      total:
        format: int64
        type: integer
    required:
    - members
    - total
  provider:
    properties:
      accessKey:
        description: only for /rest/provider-types/aws
        type: string
      billingAccountUri:
        description: The URI of the billing account to which the provider belongs.
          Only for /rest/provider-types/azure
        type: string
      children:
        description: only for /rest/provider-types/aws when paymentProvider = true
        items:
          $ref: '#/definitions/childProvider'
        type: array
      created:
        format: date-time
        type: string
      directoryUri:
        description: The name of the Azure active directory that contains the Azure
          Subscription. Only for /rest/provider-types/azure
        type: string
      familyName:
        description: The family name from the Azure user who added the Azure Subscription.
          Only for /rest/provider-types/azure
        type: string
      givenName:
        description: The given name from the Azure user who added the Azure Subscription.
          Only for /rest/provider-types/azure
        type: string
      id:
        type: string
      masterUri:
        description: only for /rest/provider-types/aws when paymentProvider = false
      metrics:
        items:
          $ref: '#/definitions/metric'
        type: array
      modified:
        format: date-time
        type: string
      name:
        type: string
      paymentProvider:
        description: only for /rest/provider-types/aws
        type: boolean
      projectUris:
        description: The URI of the project associated with the provider. Only for
          /rest/provider-types/aws and /rest/provider-types/azure
        items:
          type: string
        type: array
      providerTypeUri:
        type: string
      regions:
        items:
          $ref: '#/definitions/region'
        type: array
      s3CostBucket:
        description: only for /rest/provider-types/aws when paymentProvider = true
        type: string
      secretKey:
        description: only for /rest/provider-types/aws
        type: string
      state:
        enum:
        - Enabling
        - Enabled
        - Disabling
        - Disabled
        - Unknown
        type: string
      status:
        enum:
        - OK
        - Warning
        - Critical
        - Disabled
        - Unknown
        type: string
      subscriptionId:
        description: The Azure Subscription ID. Only for /rest/provider-types/azure
        type: string
      tenantId:
        description: The ID of the Azure active directory that contains the Azure
          Subscription. Only for /rest/provider-types/azure
        type: string
      uniqueName:
        description: The unique name from the Azure user who added the Azure Subscription.
          Only for /rest/provider-types/azure
        type: string
      uri:
        type: string
    required:
    - id
    - name
    - status
    - state
    - providerTypeUri
    - uri
    type: object
  providerList:
    properties:
      members:
        items:
          $ref: '#/definitions/provider'
        type: array
      total:
        format: int64
        type: integer
    required:
    - members
    - total
  providerService:
    properties:
      created:
        format: date-time
        type: string
      id:
        type: string
      modified:
        format: date-time
        type: string
      name:
        type: string
      providerServiceTypeUri:
        type: string
      providerUri:
        type: string
      uri:
        type: string
    required:
    - id
    - name
    - providerServiceTypeUri
    - providerUri
    - uri
    type: object
  providerServiceList:
    properties:
      members:
        items:
          $ref: '#/definitions/providerService'
        type: array
      total:
        format: int64
        type: integer
    required:
    - members
    - total
  providerServiceType:
    properties:
      created:
        format: date-time
        type: string
      id:
        type: string
      modified:
        format: date-time
        type: string
      name:
        type: string
      uri:
        type: string
    required:
    - id
    - name
    - uri
    type: object
  providerServiceTypeList:
    properties:
      members:
        items:
          $ref: '#/definitions/providerServiceType'
        type: array
      total:
        format: int64
        type: integer
    required:
    - members
    - total
  providerType:
    properties:
      created:
        format: date-time
        type: string
      id:
        type: string
      logo:
        type: string
      metrics:
        items:
          $ref: '#/definitions/metric'
        type: array
      modified:
        format: date-time
        type: string
      name:
        type: string
      uri:
        type: string
    required:
    - id
    - logo
    - name
    - uri
    type: object
  providerTypeList:
    properties:
      members:
        items:
          $ref: '#/definitions/providerType'
        type: array
      total:
        format: int64
        type: integer
    required:
    - members
    - total
  rate:
    properties:
      active:
        description: Indicates whether the rate is valid for use (i.e. not deleted
          or superceded)
        type: boolean
      created:
        format: date-time
        type: string
      deleted:
        format: date-time
        type: string
      effectiveDate:
        description: Date at which this rate came/comes into force
        format: date
        type: string
      metricName:
        description: Identifies the metric to which this rate is applied to determine
          cost
        type: string
      name:
        description: Human readable name for the rate.  If suffixed with \'(default)\'
          this rate matches the default rate for the metric
        type: string
      rateUri:
        type: string
      rateValue:
        description: Numeric value of the rate, allows nine places of precision either
          side of the decimal point
        type: number
      resourceTerminated:
        description: If terminated or deleted, the datetime at which this was done
        format: date
        type: string
      resourceUri:
        description: Uri for the resource for which this rate applies
        type: string
      unit:
        description: Scale for rate application
        type: string
    required:
    - metricName
    - resourceUri
    - name
    - effectiveDate
    - rateValue
    - unit
    type: object
  rateList:
    properties:
      count:
        format: int64
        type: integer
      members:
        items:
          $ref: '#/definitions/rate'
        type: array
      start:
        format: int64
        type: integer
      total:
        format: int64
        type: integer
    required:
    - members
    - total
  region:
    properties:
      created:
        format: date-time
        type: string
      id:
        type: string
      location:
        $ref: '#/definitions/regionLocation'
      metrics:
        items:
          $ref: '#/definitions/metric'
        type: array
      modified:
        format: date-time
        type: string
      name:
        type: string
      provider:
        $ref: '#/definitions/provider'
        description: Base provider info returned when view=full
      providerUri:
        type: string
      state:
        enum:
        - Enabling
        - Enabled
        - Disabling
        - Disabled
        - Unknown
        type: string
      status:
        enum:
        - OK
        - Warning
        - Critical
        - Disabled
        - Unknown
        type: string
      uri:
        type: string
      zones:
        items:
          $ref: '#/definitions/zone'
        type: array
    required:
    - id
    - name
    - providerUri
    - uri
    type: object
  regionConnection:
    description: |
      A connection required to enable access to a region, e.g for an
      on-premise/private region.
      Note: Not all regions will have an associated connection.
    properties:
      endpointUuid:
        description: UUID of connection endpoint.
        type: string
      location:
        $ref: '#/definitions/vcenterSettings'
      name:
        type: string
      state:
        description: State of this region connection.
        enum:
        - Enabling
        - Enabled
        - Disabling
        - Disabled
        type: string
      uri:
        description: |
          The URI of this connection
        readOnly: true
        type: string
    required:
    - endpointUuid
    - name
    - location
    - state
    type: object
  regionList:
    properties:
      members:
        items:
          $ref: '#/definitions/region'
        type: array
      total:
        format: int64
        type: integer
    required:
    - members
    - total
  regionLocation:
    description: Provides detailed location for regions.
    properties:
      latitude:
        type: number
      longitude:
        type: number
    required:
    - latitude
    - longitude
    type: object
  resourceCapacity:
    description: Number of resources to be added to the zone
    format: int64
    type: integer
  resourceProfile:
    description: |
      Represents the allowed resource profiles for a zone.
    properties:
      description:
        description: |
          Describes the resource profile
        type: string
      id:
        description: |
          A unique identifier of the resource profile
        type: string
      name:
        description: |
          Name of the resource profile
        type: string
    type: object
  resourceProfileList:
    properties:
      members:
        items:
          $ref: '#/definitions/resourceProfile'
        type: array
      total:
        format: int64
        type: integer
    required:
    - members
    - total
  roleList:
    properties:
      members:
        items:
          $ref: '#/definitions/systemRole'
        type: array
      total:
        format: int64
        type: integer
  server:
    description: |
      A server that is being managed and/or monitored by HPE OneSphere.
    properties:
      applianceUri:
        description: |
          The URI of 'appliance' in which this server is located.
          The applianceURI is limited to URI-safe characters.
        type: string
      coreCount:
        description: Total number of cores.
        type: integer
      coreSpeedMHz:
        description: Core speed in MegaHertz.
        type: integer
      cpuModel:
        description: CPU model name
        type: string
      created:
        description: |
          Date and time when the resource was created.
        format: date-time
        readOnly: true
        type: string
      externalIds:
        description: |
          A set of unique identifiers that have been assigned externally to
          this server, i.e. these IDs have not been generated by HPE OneSphere.
        items:
          description: Unique identifier that has been assigned externally to this
            server.
          properties:
            type:
              description: Type of external ID.
              type: string
            value:
              description: External ID value
              type: string
          type: object
        type: array
      id:
        description: Server ID
        readOnly: true
      memoryGB:
        description: Amount of memory in Gigabytes.
        type: integer
      modified:
        description: |
          Date and time when the resource was last modified.
        format: date-time
        readOnly: true
        type: string
      name:
        description: |
          Name of this server.
        type: string
      oneViewState:
        description: |
          State of a server as reported by OneView.
        enum:
        - Unknown
        - Adding
        - NoProfileApplied
        - Monitored
        - Unmanaged
        - Removing
        - RemoveFailed
        - Removed
        - ApplyingProfile
        - ProfileApplied
        - RemovingProfile
        - ProfileError
        - Unsupported
        - UpdatingFirmware
        readOnly: true
        type: string
      powerState:
        description: |
          Current power state of a server.
        enum:
        - true
        - false
        - PoweringOn
        - PoweringOff
        - Resetting
        - Unknown
        readOnly: true
        type: string
      processorCount:
        description: Number of processors.
        type: integer
      projectUri:
        description: |
          The URI of a 'project' to which this has been allocated.
          Costs for this server will included in the costs calculation
          for this project.
          The projectURI is limited to URI-safe characters.
        type: string
      regionUri:
        description: |
          The URI of 'region' in which this server is located.
          The regionURI is limited to URI-safe characters.
        type: string
      serverModel:
        description: Server model name
        type: string
      state:
        description: |
          The current state of this server.
        enum:
        - Enabling
        - Enabled
        - Disabling
        - Disabled
        type: string
      status:
        description: |
          The current status of this server.
        enum:
        - OK
        - Warning
        - Critical
        - Unknown
        readOnly: true
        type: string
      uri:
        description: |
          The URI of this server. The URI is automatically generated when the
          server is created and cannot be modified.
        readOnly: true
        type: string
      zoneUri:
        description: |
          The URI of 'zone' in which this server is located.
          The zoneURI is limited to URI-safe characters.
        type: string
    type: object
  serverList:
    description: Result of a query to get servers.
    properties:
      members:
        items:
          $ref: '#/definitions/server'
        type: array
      total:
        format: int64
        type: integer
      unfilteredTotal:
        format: int64
        type: integer
    required:
    - members
    - total
    - unfilteredTotal
    type: object
  service:
    properties:
      catalogUri:
        description: Where the service comes from
        type: string
      created:
        format: date-time
        type: string
      deployment:
        description: |
          The valid zones where the service can be deployed. Included when view=deployment
        properties:
          zones:
            items:
              $ref: '#/definitions/zone'
            type: array
      description:
        type: string
      diskFormat:
        type: string
      icon:
        type: string
      id:
        type: string
      minDiskSizeGB:
        format: float
        type: number
      minMemSizeGB:
        format: float
        type: number
      modified:
        format: date-time
        type: string
      name:
        type: string
      osType:
        type: string
      providerTypeUri:
        description: |
          When the service can only be deployed in regions associated with a certain provider type, such as a service in the Azure marketplace
        type: string
      regionUri:
        description: |
          When the service can only be deployed in a particluar region, such as a service from a AWS
        type: string
      serviceTypeUri:
        type: string
      sizeMB:
        type: integer
      uri:
        type: string
      version:
        description: Deprecated. use versions.
        type: string
      versions:
        items:
          type: string
        type: array
      virtualSizeMB:
        type: integer
      zoneUri:
        description: |
          When the service can only be deployed in a particluar region, such as a service from a vcenter
        type: string
    required:
    - catalogUri
    - description
    - id
    - name
    - serviceTypeUri
    - uri
    type: object
  serviceList:
    properties:
      members:
        items:
          $ref: '#/definitions/service'
        type: array
      total:
        format: int64
        type: integer
    required:
    - members
    - total
  serviceType:
    properties:
      id:
        type: string
      name:
        type: string
      uri:
        type: string
    required:
    - id
    - name
    - uri
    type: object
  serviceTypeList:
    properties:
      members:
        items:
          $ref: '#/definitions/serviceType'
        type: array
      total:
        format: int64
        type: integer
    required:
    - members
    - total
  session:
    properties:
      token:
        description: |
          Use this for `Authorization: "Bearer <token>"` HTTP request header.
        type: string
      userUri:
        description: URI for the logged in user
        type: string
    required:
    - token
    - userUri
    type: object
  sessionFull:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/user'
      userUri:
        description: URI for the logged in user
        type: string
    required:
    - token
    - userUri
    - user
    type: object
  sessionIdp:
    properties:
      method:
        type: string
      url:
        type: string
    required:
    - url
    - method
    type: object
  status:
    properties:
      status:
        type: string
    required:
    - status
    type: object
  subnet:
    properties:
      cidr:
        type: string
      dns1:
        type: string
      dns2:
        type: string
      gateway:
        type: string
      ipPools:
        items:
          $ref: '#/definitions/ipPool'
        type: array
    required:
    - cidr
    type: object
  systemRole:
    description: |
      A user's role across the system, outside of any role they may have within a given project. For example, a system administrator can add and edit other users. Administrators can see all data for all users and perform any action. Analyst can see limited data from other users and perform limited actions. Consumer can see and act only on their own data.
    enum:
    - administrator
    - analyst
    - consumer
    - project-creator
    type: string
  tag:
    properties:
      id:
        type: string
      name:
        type: string
      tagKey:
        description: Related `tag-key`
        type: object
      tagKeyUri:
        type: string
      uri:
        type: string
    required:
    - id
    - tagKeyUri
    - name
    - uri
    type: object
  tagKey:
    properties:
      id:
        type: string
      name:
        type: string
      tags:
        items:
          $ref: '#/definitions/tag'
        type: array
      uri:
        type: string
    required:
    - name
    - uri
    type: object
  tagKeyList:
    properties:
      members:
        items:
          $ref: '#/definitions/tagKey'
        type: array
      total:
        format: int64
        type: integer
  tagList:
    properties:
      members:
        items:
          $ref: '#/definitions/tag'
        type: array
      total:
        format: int64
        type: integer
  taskResource:
    description: |
      Represents operation task resource that will be bootstrapped based on resource type.
    properties:
      ProgressUpdates:
        description: |
          list of progress of all child task
        items:
          properties:
            StatusUpdate:
              type: string
            TimeStamp:
              format: date-time
              type: string
          type: object
        type: array
      associatedResourceInstanceId:
        description: |
          uuid of the associated resource
        type: string
      associatedResourceInstanceType:
        description: |
          type of the associated resource
        type: string
      associatedResourceInstanceUri:
        description: |
          uri of the associated resource
        type: string
      childTasks:
        description: |
          list of all child task ids
        items:
          type: string
        type: array
      created:
        description: |
          creation time of object
        type: string
      error:
        $ref: '#/definitions/error'
      modified:
        description: |
          modified time of object
        type: string
      name:
        description: |
          Short name of the operation task
        type: string
      parentId:
        description: |
          parent id of the task resource
        type: string
      percentComplete:
        description: |
          task completion percentage
        type: integer
      state:
        description: |
          state of the task resource
        enum:
        - created
        - running
        - completed
        type: string
      status:
        description: |
          status of the task resource
        enum:
        - Ok
        - Warning
        - Critical
        type: string
      taskFailed:
        description: |
          boolean that depicts task is success/failure
        type: boolean
      type:
        description: |
          name of the object type
        type: string
      uri:
        description: |
          URI of the task resource
        type: string
      uuid:
        description: |
          uuid of the of the task
        type: string
  updateAppliance:
    items:
      $ref: '#/definitions/updateAppliancePatch'
    type: array
  updateAppliancePatch:
    example:
      op: replace
      path: /name
      value: new name
    properties:
      op:
        description: |
          The operation to take on the specified property.
          See: https://tools.ietf.org/html/rfc6902#section-4
        enum:
        - replace
        - remove
        type: string
      path:
        description: The path to the property to operate on.
        type: string
      value:
        description: The new value (valid with op=replace)
        type: object
    required:
    - op
    - path
    type: object
  updateBillingAccount:
    items:
      $ref: '#/definitions/updateBillingAccountPatch'
    type: array
  updateBillingAccountPatch:
    example:
      op: replace
      path: /name
      value: new name
    properties:
      op:
        description: |
          The operation to take on the specified property. See: https://tools.ietf.org/html/rfc6902#section-4
        enum:
        - add
        - replace
        - remove
        type: string
      path:
        description: The path to the property to operate on.
        type: string
      value:
        description: The new value (valid with op=replace)
        type: object
    required:
    - op
    - path
  updateDeploymentProperty:
    example: |
      Example 1. To remove all existing volumes and add new volumes, replace can be used as follows op: replace path: "/volumeURIs" value: >
        "[ "/rest/volumes/85609a9e-31f5-4c7b-bd54-1ba50136bdf7", "/rest/volumes/85609a9e-31f5-4c7b-bd54-1ba50136bdf8" ]"
      Example 2. To add additional volumes to a deployment already having volumes can be done by using add as follows op: add path: "/volumeURIs" value: >
        "[ "/rest/volumes/85609a9e-31f5-4c7b-bd54-1ba50136bdf7", "/rest/volumes/85609a9e-31f5-4c7b-bd54-1ba50136bdf8" ]"
      Example 3. To remove specific volumes from a deployment can be done by using remove as follows op: remove path: "/volumeURIs" value: >
        "[ "/rest/volumes/85609a9e-31f5-4c7b-bd54-1ba50136bdf7", "/rest/volumes/85609a9e-31f5-4c7b-bd54-1ba50136bdf8" ]"
    properties:
      op:
        description: |
          The operation to take on the specified property. See: https://tools.ietf.org/html/rfc6902#section-4
        enum:
        - add
        - replace
        - remove
        type: string
      path:
        description: The path to the property to operate on. Supported only for volumeURIs
          property.
        type: string
      value:
        description: The new value
        type: object
    required:
    - op
    - path
  updateNetwork:
    items:
      $ref: '#/definitions/updateNetworkPatch'
    type: array
  updateNetworkPatch:
    example:
      op: add
      path: projectUris
      value: projectUri1
    properties:
      op:
        description: |
          The operation to take on the specified property. See: https://tools.ietf.org/html/rfc6902#section-4
        enum:
        - add
        - replace
        - remove
        type: string
      path:
        description: The path to the property to operate on.
        type: string
      value:
        description: The value for add, remove or replace operation
        type: object
    required:
    - op
    - path
  updateProject:
    properties:
      description:
        type: string
      name:
        type: string
      tagUris:
        items:
          type: string
        type: array
    type: object
  updateProvider:
    items:
      $ref: '#/definitions/updateProviderPatch'
    type: array
  updateProviderPatch:
    example:
      op: replace
      path: /name
      value: new name
    properties:
      op:
        description: |
          The operation to take on the specified property. See: https://tools.ietf.org/html/rfc6902#section-4
        enum:
        - add
        - replace
        - remove
        type: string
      path:
        description: The path to the property to operate on.
        type: string
      value:
        description: The new value (valid with op=replace)
        type: object
    required:
    - op
    - path
  updateServer:
    items:
      $ref: '#/definitions/updateServerPatch'
    type: array
  updateServerPatch:
    example:
      op: replace
      path: /state
      value: new state
    properties:
      op:
        description: |
          The operation to take on the specified property.
          See: https://tools.ietf.org/html/rfc6902#section-4
        enum:
        - replace
        - remove
        type: string
      path:
        description: The path to the property to operate on.
        type: string
      value:
        description: The new value (valid with op=replace)
        type: object
    required:
    - op
    - path
    type: object
  updateSubscription:
    items:
      $ref: '#/definitions/updateSubscriptionPatch'
    type: array
  updateSubscriptionPatch:
    example:
      op: add
      path: /roles
      value:
      - Reader
    properties:
      op:
        description: |
          The operation to take on the specified property. See: https://tools.ietf.org/html/rfc6902#section-4
        enum:
        - add
        - replace
        type: string
      path:
        description: The path to the property to operate on.
        type: string
      value:
        description: The new value (valid with op=replace)
        type: object
    required:
    - op
    - path
  updateUser:
    description: |
      Update a user. Note that updating a user's role will invalidate existing sessions and they will need to log in again.
    properties:
      email:
        description: Updated email address
        type: string
      name:
        description: Updated display name
        type: string
      password:
        description: Password must be at least 8 characters long.
        type: string
      role:
        $ref: '#/definitions/systemRole'
    type: object
  updateVolume:
    properties:
      name:
        description: Updated name of the volume
        type: string
      sizeGiB:
        description: 'Updated size of the volume. Note: size can only be increased.'
        type: integer
    type: object
  updateZone:
    example:
    - op: add
      path: /inTransitClusters
      value:
      - id: domain-c51
        state: Enabled
    - op: add
      path: /networkSettings
      value:
        esxManagementNetwork: net2
        movementNetwork: net4
        ncsManagementNetwork: net1
        productionNetwork:
        - net5
        - net6
        storageNetwork: net3
    - op: add
      path: /inTransitKvmServers
      value:
      - roles:
        - ImageLibrary
        serverUri: /rest/servers/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd3
        state: Enabled
    items:
      $ref: '#/definitions/updateZonePatch'
    type: array
  updateZonePatch:
    example:
      EnableCluster:
      - op: add
        path: /inTransitClusters
        value:
        - id: domain-c51
          state: Enabled
      EnableKVMServer:
      - op: add
        path: /inTransitKvmServers
        value:
        - roles:
          - ImageLibrary
          serverUri: /rest/servers/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd3
          state: Enabled
      Update network settings:
      - op: add
        path: /networkSettings
        value:
          physicalNetworks:
          - name: dataDVS
            networkType: vmware_dvs
      UpdateResourceProfile:
      - op: replace
        path: /resourceProfile
        value:
          name: SY480-Gen9-Low-Density
    properties:
      op:
        description: |
          The operation to take on the specified property. See: https://tools.ietf.org/html/rfc6902#section-4
        enum:
        - add
        - replace
        - remove
        type: string
      path:
        description: The path to the property to operate on.
        type: string
      value:
        description: The new value (valid with op=replace)
        type: object
    required:
    - op
    - path
  user:
    properties:
      email:
        type: string
      isLocal:
        description: |
          Indicates whether or not a user is created and managed within OneSphere or is managed by an external identity provider.
        type: string
      name:
        type: string
      role:
        $ref: '#/definitions/systemRole'
      uri:
        type: string
    required:
    - email
    - name
    - role
    - uri
    type: object
  userList:
    properties:
      members:
        items:
          $ref: '#/definitions/user'
        type: array
      total:
        format: int64
        type: integer
  vcenterSettings:
    description: |
      Represents vcenter credentials which will be validated and stored as a part of zone create.
    properties:
      ipAddress:
        type: string
      password:
        type: string
      port:
        description: https port for vcenter server (default is 443)
        format: int64
        type: integer
      username:
        type: string
    type: object
  versions:
    properties:
      versions:
        items:
          type: string
        type: array
    required:
    - versions
    type: object
  virtualMachineProfile:
    properties:
      cpuCount:
        format: int64
        type: integer
      created:
        format: date-time
        type: string
      diskSizeGB:
        format: int64
        type: integer
      id:
        type: string
      memorySizeGB:
        format: float
        type: number
      modified:
        format: date-time
        type: string
      name:
        type: string
      regionUri:
        type: string
      uri:
        type: string
      zoneUri:
        type: string
    required:
    - cpuCount
    - diskSizeGB
    - id
    - memorySizeGB
    - name
    - regionUri
    - zoneUri
    - uri
    type: object
  virtualMachineProfileList:
    properties:
      members:
        items:
          $ref: '#/definitions/virtualMachineProfile'
        type: array
      total:
        format: int64
        type: integer
    required:
    - members
    - total
  volume:
    properties:
      attachedMode:
        type: string
      attachments:
        items:
          $ref: '#/definitions/volumeAttachment'
        type: array
      created:
        format: date-time
        type: string
      description:
        type: string
      id:
        type: string
      modified:
        format: date-time
        type: string
      name:
        type: string
      projectUri:
        type: string
      sizeGiB:
        type: integer
      status:
        type: string
      uri:
        type: string
      zoneUri:
        type: string
    required:
    - id
    - name
    - sizeGiB
    - uri
    - zoneUri
    - projectUri
    type: object
  volumeAttachment:
    properties:
      deploymentUri:
        type: string
      device:
        type: string
      id:
        type: string
  volumeList:
    properties:
      members:
        items:
          $ref: '#/definitions/volume'
        type: array
      total:
        type: integer
  zone:
    properties:
      applianceUri:
        description: |
          The appliance where this zone is hosted, if any.
        type: string
      clusters:
        description: A List of esxCluster.
        items:
          $ref: '#/definitions/esxCluster'
        type: array
      created:
        format: date-time
        type: string
      currentTasks:
        description: Shows the list of tasks
        items:
          $ref: '#/definitions/zoneTasks'
        type: array
      default:
        description: If true, this zone will be used for deployment. In a region,
          for every zoneType there can be only one zone with default=true.
        type: boolean
      error:
        $ref: '#/definitions/error'
      esxLcmTask:
        $ref: '#/definitions/taskResource'
      id:
        type: string
      inTransitClusters:
        description: Represents a List of Clusters for which state trasnsition is
          in-progress.
        items:
          $ref: '#/definitions/esxCluster'
        type: array
      inTransitKvmServers:
        description: only for /rest/zone-types/kvm
        items:
          $ref: '#/definitions/kvmServer'
        type: array
      kvmServers:
        description: only for /rest/zone-types/kvm
        items:
          $ref: '#/definitions/kvmServer'
        type: array
      managed:
        type: boolean
      metrics:
        items:
          $ref: '#/definitions/metric'
        type: array
      modified:
        format: date-time
        type: string
      name:
        type: string
      networkSettings:
        $ref: '#/definitions/networkSettings'
      providerUri:
        type: string
      regionUri:
        type: string
      resourceProfile:
        $ref: '#/definitions/resourceProfile'
      state:
        enum:
        - Initializing
        - Enabling
        - Enabled
        - Disabling
        - Disabled
        - Unknown
        - AddingCapacity
        type: string
      status:
        enum:
        - OK
        - Warning
        - Critical
        - Disabled
        - Unknown
        type: string
      uri:
        type: string
      vcenterSettings:
        $ref: '#/definitions/vcenterSettings'
      zoneTypeUri:
        enum:
        - /rest/zone-types/aws-az
        - /rest/zone-types/vcenter
        - /rest/zone-types/kvm
        type: string
    required:
    - id
    - name
    - regionUri
    - uri
    - zoneTypeUri
    type: object
  zone_rate:
    description: |
      The enclosing zone describes the resource to which submitted rates should apply.
      The default set of rates for an ncs zone includes rates for metricNames
      'resource.memory.allocation', 'ncs.resource.annual.cost', 'resource.storage.allocation' and 'resource.cores.allocation'
      EffectiveDate defaults to today and all other values are generated to match
      the default rate for the metric.
    properties:
      metricName:
        description: |
          Identifies the metric to which this rate is applied to determine cost
        type: string
      rateValue:
        description: |
          Numeric value of the rate, allows nine places of precision either side of the decimal point
        type: number
    required:
    - metricName
    - rateValue
    type: object
  zoneAction:
    example:
      resourceOps:
        resourceCapacity: 2
        resourceType: compute
      type: add-capacity
    properties:
      resourceOps:
        properties:
          resourceCapacity:
            $ref: '#/definitions/resourceCapacity'
          resourceType:
            enum:
            - compute
            - storage
            type: string
        type: object
      type:
        enum:
        - reset
        - add-capacity
        - reduce-capacity
        type: string
    required:
    - type
    type: object
  zoneConnection:
    description: |
      A connection required to enable access to a zone, e.g for an
      on-premise/private region.
      Note: All vcenter zone types will need an associated connection.
    properties:
      id:
        description: |
          ID of connection endpoint
        type: string
      location:
        $ref: '#/definitions/vcenterSettings'
      name:
        type: string
      state:
        enum:
        - Enabling
        - Enabled
        - Disabling
        - Disabled
        type: string
      uri:
        description: |
          The URI of this connection
        readOnly: true
        type: string
      uuid:
        description: |
          UUID of connection endpoint
        type: string
    type: object
  zoneConnectionList:
    properties:
      members:
        items:
          $ref: '#/definitions/zoneConnection'
        type: array
      total:
        format: int64
        type: integer
    required:
    - members
    - total
  zoneList:
    properties:
      members:
        items:
          $ref: '#/definitions/zone'
        type: array
      total:
        format: int64
        type: integer
    required:
    - members
    - total
  zoneTasks:
    properties:
      taskName:
        enum:
        - CreatingPalermoRegionTask
        - AddingCapacityTask
        type: string
      taskState:
        type: string
      taskStatus:
        type: string
    type: object
  zoneType:
    properties:
      created:
        format: date-time
        type: string
      id:
        enum:
        - aws-az
        - vcenter
        - kvm
        type: string
      modified:
        format: date-time
        type: string
      name:
        type: string
      uri:
        enum:
        - /rest/zone-types/aws-az
        - /rest/zone-types/vcenter
        - /rest/zone-types/kvm
        type: string
    required:
    - id
    - name
    - uri
    type: object
  zoneTypeList:
    properties:
      members:
        items:
          $ref: '#/definitions/zoneType'
        type: array
      total:
        format: int64
        type: integer
    required:
    - members
    - total
host: deic02-hpe.hpeonesphere.com
info:
  contact:
    name: HPE OneSphere API team
    url: http://www.hpe.com/onesphere
  description: |
    HPE OneSphere hybrid cloud management REST API.

    For calls requiring authentication use /rest/session to get a token.
  termsOfService: http://www.hpe.com/onesphere
  title: HPE OneSphere API
  version: 1.0.0
paths:
  /about/versions:
    get:
      description: Get supported versions
      operationId: GetVersions
      responses:
        "200":
          description: Version response
          schema:
            $ref: '#/definitions/versions'
  /account:
    get:
      description: Returns the global account information. **Not implemented**
      operationId: GetAccount
      parameters:
      - description: Whether to return related content.
        enum:
        - full
        in: query
        name: view
        type: string
      responses:
        "200":
          description: Account response
          schema:
            $ref: '#/definitions/account'
  /appliances:
    get:
      description: Returns appliances.
      operationId: GetAppliance
      parameters:
      - description: |
          The name of the desired appliance.
          This parameter may be repeated with multiple appliance names.
        in: query
        name: name
        required: false
        type: string
      - description: |
          Set of appliances in this region.
        in: query
        name: regionUri
        required: false
        type: string
      responses:
        "200":
          description: |
            Successful response.
            The query was performed successfully and the list of matching appliances
            is returned.
            This list may be empty if no appliances match the specified criteria.
          schema:
            $ref: '#/definitions/applianceList'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
      summary: NOT IMPLEMENTED
    post:
      description: Create an appliance.
      operationId: CreateAppliance
      parameters:
      - in: body
        name: appliance
        required: true
        schema:
          $ref: '#/definitions/createAppliance'
      responses:
        "202":
          description: Appliance setup successfully initiated.
          schema:
            $ref: '#/definitions/appliance'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
      summary: NOT IMPLEMENTED
  /appliances/{id}:
    delete:
      description: |
        Delete an appliance.
        This removes the appliance registration and tears down the secure
        comms link to the on-premise appliance.
        If zones exist on this appliance, an '409' error will be returned.
        The zones on this appliance must be removed before the appliance
        delete request can be accepted.
      operationId: DeleteAppliance
      parameters:
      - description: ID of the appliance to delete.
        in: path
        name: id
        required: true
        type: string
      responses:
        "202":
          description: |
            Appliance accepted for deletion.
          schema:
            $ref: '#/definitions/appliance'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Appliance not found.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Conflict. Zones still exist on this appliance.
          schema:
            $ref: '#/definitions/error'
      summary: NOT IMPLEMENTED
    get:
      description: Returns an appliance based on its ID.
      operationId: GetApplianceById
      parameters:
      - description: ID of the appliance to retrieve.
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: |
            Successful response.
            The query successfully retrieved an appliance based on ID.
          schema:
            $ref: '#/definitions/appliance'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Appliance not found.
          schema:
            $ref: '#/definitions/error'
      summary: NOT IMPLEMENTED
    patch:
      consumes:
      - application/json-patch+json
      description: Update properties of an appliance.
      operationId: UpdateAppliance
      parameters:
      - description: ID of appliance to update.
        in: path
        name: id
        required: true
        type: string
      - description: List of appliance updates.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/updateAppliance'
      responses:
        "200":
          description: |
            Successfully update the appliance.
            Note that a '202' response may also be returned, depending on the nature
            of the update.
          schema:
            $ref: '#/definitions/appliance'
        "202":
          description: |
            Appliance update successfully initiated.
            This response is returned if the update takes a considerable time, e.g.
            the update of endpoint details.
          schema:
            $ref: '#/definitions/appliance'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Appliance not found.
          schema:
            $ref: '#/definitions/error'
      summary: NOT IMPLEMENTED
  /billing-accounts:
    get:
      description: Returns billing accounts. It requires the **administrator** or
        **project creator** global role.
      operationId: FindBillingAccounts
      parameters:
      - description: |
          Filters the billing accounts returned.

          It supports equality
          comparison against one or more properties using a
          ``"name EQ value"`` syntax. Multiple comparisons can be combined
          using a ``"name1 EQ value1 AND name2 EQ value2"`` syntax.

          It supports comparison of **providerTypeUri** and **name**.

          For example: ``query="providerTypeUri EQ /rest/provider-types/azure"``
        in: query
        name: query
        required: false
        type: string
      - description: Whether to return related content.
        enum:
        - full
        in: query
        name: view
        type: string
      responses:
        "200":
          description: List of billing accounts. Credentials are not included when
            listing billing accounts.
          examples:
            billing-account:
              created: "2018-04-09T19:17:16Z"
              directoryUri: somecompany.onmicrosoft.com
              id: e42588ca-2a4e-444b-8fd7-349e925cf9a3
              modified: "2018-04-09T19:17:16Z"
              name: Enterprise Enrollment
              providerTypeUri: /rest/provider-types/azure
              providers: []
              state: ENABLED
              status: OK
              uri: /rest/billing-accounts/e42588ca-2a4e-444b-8fd7-349e925cf9a3
          schema:
            $ref: '#/definitions/billingAccountList'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error'
    post:
      description: Creates a new billing account. It requires the **administrator**
        role.
      operationId: CreateBillingAccount
      parameters:
      - description: Add new billing account
        in: body
        name: billing-account
        required: true
        schema:
          $ref: '#/definitions/createBillingAccount'
      responses:
        "201":
          description: New billing account sucessfully created and enabled.
          schema:
            $ref: '#/definitions/billing-account'
        "400":
          description: Bad Request</BR> Error Codes</BR>InvalidProviderTypeURI Invalid
            provider type URI</BR>MissingRequiredFields Required fields must not be
            empty</BR>MissingCredentials Correct credential fields must be given based
            on providerTypeUri
          schema:
            $ref: '#/definitions/error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error'
  /billing-accounts/{id}:
    delete:
      description: Deletes a billing account. It requires the **administrator** role.
      operationId: DeleteBillingAccountById
      parameters:
      - description: ID of billing account to delete
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Billing account deleted
        "401":
          description: Not Authorized.
        "403":
          description: Forbidden
        "404":
          description: Not Found.
    get:
      description: Returns a billing account based on its id. It requires the **administrator**
        or **project creator** global role. Credentials are not included.
      operationId: GetBillingAccountById
      parameters:
      - description: ID of billing account to fetch
        in: path
        name: id
        required: true
        type: string
      - description: Whether to return related content.
        enum:
        - full
        in: query
        name: view
        type: string
      responses:
        "200":
          description: Billing account found
          schema:
            $ref: '#/definitions/billing-account'
        "400":
          description: Bad Request</BR> Error Codes</BR>InvalidProviderTypeURI Invalid
            provider type URI</BR>MissingRequiredFields Required fields must not be
            empty</BR>MissingCredentials Correct credential fields must be given based
            on providerTypeUri
          schema:
            $ref: '#/definitions/error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
    patch:
      consumes:
      - application/json-patch+json
      description: Updates a billing account. It requires the **administrator** role.
      operationId: UpdateBillingAccount
      parameters:
      - description: ID of billing account to update
        in: path
        name: id
        required: true
        type: string
      - description: |
          The JSON patch to apply to the billing account.

          Note that updates to Azure apiAccessKey must use the `"add"`` json-patch operation rather than `"replace"` and if
          the Azure enrollmentNumber is changed, the Azure apiAccessKey must also be given.

          Additionally, certain fields may not be modified, namely id and providerTypeUri.

          If the patch is found to be invalid for any reason, HTTP 400 will be returned.
          If a server-side error occurs when adding the billing account, HTTP 500 is returned.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/updateBillingAccount'
      responses:
        "200":
          description: Billing account sucessfully updated.
          schema:
            $ref: '#/definitions/billing-account'
        "400":
          description: Bad Request</BR> Error Codes</BR>InvalidQuery Invalid Query
            Parameter</BR>MissingRequiredFields Required fields must not be empty</BR>MissingCredentials
            Correct credential fields must be given based on providerTypeUri
          schema:
            $ref: '#/definitions/error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
  /catalog-types:
    get:
      description: Returns catalog types.
      operationId: FindCatalogTypes
      responses:
        "200":
          description: List of catalog types
          schema:
            $ref: '#/definitions/catalogTypeList'
  /catalogs:
    get:
      description: Returns catalogs. It requires the **consumer** global role.
      operationId: FindCatalogs
      parameters:
      - description: |
          Filters the catalogs returned.

          It performs a case insensitive comparison of the supplied string
          value with the **name** property.

          For example: ``userQuery="dock"``
        in: query
        name: userQuery
        required: false
        type: string
      - description: |
          Return related resources:
            * `full` - Whether to return related content.
        enum:
        - full
        in: query
        name: view
        type: string
      responses:
        "200":
          description: List of catalogs
          schema:
            $ref: '#/definitions/catalogList'
    post:
      description: Creates a new catalog.
      operationId: CreateCatalog
      parameters:
      - description: Add new catalog
        in: body
        name: catalog
        required: true
        schema:
          $ref: '#/definitions/createCatalog'
      responses:
        "201":
          description: New catalog sucessfully created.
          schema:
            $ref: '#/definitions/catalog'
        "400":
          description: Bad request.
          examples:
            created: "2017-07-31T09:26:54Z"
            id: helm
            modified: "2017-07-31T09:27:01Z"
            name: Kubernetes Charts
            protected: "false"
            serviceTypeUri: /rest/service-types/helm-charts-repository
            status: Unknown
            uri: /rest/catalogs/helm
            url: https://kubernetes-charts-incubator.storage.googleapis.com
          schema:
            $ref: '#/definitions/error'
  /catalogs/{id}:
    delete:
      description: Delete a catalog and associated resources. **Not implemented**
      operationId: DeleteCatalog
      parameters:
      - description: ID of catalog to delete
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Catalog deleted; no content
          examples:
            DELETE /rest/catalogs/c86f18f1-a611-470e-8a11-1645b70b63c8: no content
        "404":
          description: No matching catalog found
          schema:
            $ref: '#/definitions/error'
    get:
      description: Returns a catalog based on its id. It requires the **consumer**
        global role.
      operationId: GetCatalogById
      parameters:
      - description: ID of catalog to fetch
        in: path
        name: id
        required: true
        type: string
      - description: |
          Return related resources:
            * `full` - Whether to return related content.
        enum:
        - full
        in: query
        name: view
        type: string
      responses:
        "200":
          description: Catalog response
          schema:
            $ref: '#/definitions/catalog'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
    patch:
      consumes:
      - application/json-patch+json
      description: Patches a catalog. Allowed fields for PATCH of catalogs are name(add,replace),
        password(add), accessKey(add), secretKey(add), state(add,replace)
      operationId: UpdateCatalog
      parameters:
      - description: ID of catalog to update
        in: path
        name: id
        required: true
        type: string
      - description: Update catalog
        in: body
        name: catalog
        required: true
        schema:
          $ref: '#/definitions/patchCatalog'
      responses:
        "200":
          description: Catalog sucessfully updated.
          schema:
            $ref: '#/definitions/catalog'
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
  /connect-app:
    get:
      description: Generates connect app s3 url
      operationId: connect-app
      parameters:
      - description: OS type for which compatible connect app URL has to be generated.
        in: query
        name: os
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: generated connect-app url
          schema:
            format: url
            type: string
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
  /deployments:
    get:
      description: Returns deployments. It requires any project role or non-'consumer'
        global role.
      operationId: FindDeployments
      parameters:
      - description: |
          Filters the deployments returned.

          It supports equality
          comparison against one or more properties using a
          ``"name EQ value"`` syntax. Multiple comparisons can be combined
          using a ``"name1 EQ value1 AND name2 EQ value2"`` syntax.

          It supports comparison of **zoneUri** and **projectUri**.

          For example: ``query="zoneUri EQ /rest/zones/xxxx"``
        in: query
        name: query
        required: false
        type: string
      - description: |
          Filters the deployments returned.

          It performs a case insensitive comparison of the supplied string
          value with the **name** property.

          For example: ``userQuery="ubun"``
        in: query
        name: userQuery
        required: false
        type: string
      - description: |
          Return related resources:
            * `full` - include zone, service, volume details.
        enum:
        - full
        in: query
        name: view
        type: string
      responses:
        "200":
          description: List of deployments
          examples:
            /rest/deployments:
              cpuCount: 1
              cpuGhz: 1
              created: "2017-08-07T09:15:10Z"
              diskSizeGB: 20
              endpoints:
              - 10.10.0.8
              hasConsole: true
              id: c86f18f1-a611-470e-8a11-1645b70b63c7
              memorySizeGB: 2
              modified: "2017-08-07T09:20:48Z"
              name: test-instance
              projectUri: /rest/projects/930381ba921b47c39960371d4145e0d2
              regionUri: /rest/regions/v3d6e308-4b99-4b96-9b2c-835de6a5987c
              serviceUri: /rest/services/8bbc7abe-2ae1-a366-a4dd-f065618063a6
              status: Ok
              uri: /rest/deployments/c86f18f1-a611-470e-8a11-1645b70b63c7
              virtualMachineProfileUri: /rest/virtual-machine-profiles/a464ecd0-d16d-447d-af41-ff7437df2a09
              zoneUri: /rest/zones/c2b6e308-4b99-4b96-9b2c-835de6a56a8c
            Filter deployments by deployment name: /rest/deployments?userQuery=test-instance
            Filter deployments by projectUri: /rest/deployments?query=projectUri+EQ+/rest/projects/930381ba921b47c39960371d4145e0d2
            Filter deployments by regionUri: /rest/deployments?query=regionUri+EQ+/rest/regions/v3d6e308-4b99-4b96-9b2c-835de6a5987c
            Filter deployments by serviceTypeUri: /rest/deployments?query=serviceTypeUri+EQ+/rest/service-types/vm
          schema:
            $ref: '#/definitions/deploymentList'
    post:
      description: Creates a new deployment. It requires any project role, or the
        **administrator** or **project creator** global role.
      operationId: CreateDeployment
      parameters:
      - description: Add new deployment. If regionUri is specified and zoneUri is
          not specified, the zone that is configured as default will be used. If default
          zone is not configured then the first valid zone will be used to create
          the deployment.
        in: body
        name: deployment
        required: true
        schema:
          $ref: '#/definitions/createDeployment'
      responses:
        "201":
          description: New deployment sucessfully created.
          examples:
            /rest/deployments:
              Request Body:
                name: test-deployment
                networks:
                - networkUri: /rest/networks/70c154ff-1707-4f73-a6fd-f370e5293a3c
                ports:
                - 22
                - 25
                projectUri: /rest/projects/930381ba921b47c39960371d4145e0d2
                publicKey: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC+paa2aBHEFO3s9vKKR
                  +LVISrTWH0bqAYXmAwzOutEVwHSEhZwYIXe8V70XVa2y90J34iq52PCl3njRp31vcgLFDi
                  JxfmMLfGNW1laRlM7McH3Tj4rVslbKsbr62KrngnZJ2wUkSk3GvtDaoLE3hzZEXywfvpZravVo8k
                  FBRpDRluVBmtrK5MFzaxsztNc3okXGiCxcyOhmCrPRRe5hcnknnipw/FTYzPL4z/Zs0I3XF8kgfap
                  G0Iom72xWUJKK4fQuYpS14t145ls3ouzI5b3FQmZ+JIbHg/MWUbiZFlDCKHBBCrNbdjRQe4XHMumh
                  tOfUypOe1WGNK/oZ0Xyqqnj ubuntu@ubuntu
                regionUri: /rest/regions/v3d6e308-4b99-4b96-9b2c-835de6a5987c
                serviceUri: /rest/services/8bbc7abe-2ae1-a366-a4dd-f065618063a6
                virtualMachineProfileUri: /rest/virtual-machine-profiles/3
                zoneUri: /rest/zones/c2b6e308-4b99-4b96-9b2c-835de6a56a8c
              Response Body:
                created: ""
                hasConsole: false
                id: 2537bea1-7fb3-4997-a0c1-22ef0a3202d2
                modified: ""
                name: test-deployment
                projectUri: /rest/projects/930381ba921b47c39960371d4145e0d2
                regionUri: /rest/regions/v3d6e308-4b99-4b96-9b2c-835de6a5987c
                status: Unknown
                uri: /rest/deployments/2537bea1-7fb3-4997-a0c1-22ef0a3202d2
                zoneUri: /rest/zones/c2b6e308-4b99-4b96-9b2c-835de6a56a8c
            Note: Only RSA key is supported for public key
          schema:
            $ref: '#/definitions/deployment'
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
  /deployments/{id}:
    delete:
      description: Delete a deployment and associated resources. It requires any project
        role, or the **administrator** or **project creator** global role.
      operationId: DeleteDeployment
      parameters:
      - description: ID of deployment to delete
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Deployment deleted; no content
          examples:
            DELETE /rest/deployments/c86f18f1-a611-470e-8a11-1645b70b63c7: no content
        "404":
          description: No matching deployment found
          schema:
            $ref: '#/definitions/error'
    get:
      description: Returns a deployment based on its id. It requires any project role
        or non-'consumer' global role.
      operationId: GetDeploymentById
      parameters:
      - description: ID of deployment to fetch
        in: path
        name: id
        required: true
        type: string
      - description: |
          Return related resources:
            * `full` - include region, zone, service, virtual machine profile,  firewall, volume details.
        enum:
        - full
        in: query
        name: view
        type: string
      responses:
        "200":
          description: Deployment response
          examples:
            /rest/deployments/c86f18f1-a611-470e-8a11-1645b70b63c7:
              cpuCount: 1
              cpuGhz: 1
              created: "2017-08-07T09:15:10Z"
              diskSizeGB: 20
              endpoints:
              - 10.10.0.8
              hasConsole: true
              id: c86f18f1-a611-470e-8a11-1645b70b63c7
              memorySizeGB: 2
              modified: "2017-08-07T09:20:48Z"
              name: test-instance
              projectUri: /rest/projects/930381ba921b47c39960371d4145e0d2
              regionUri: /rest/regions/v3d6e308-4b99-4b96-9b2c-835de6a5987c
              serviceUri: /rest/services/8bbc7abe-2ae1-a366-a4dd-f065618063a6
              status: Ok
              uri: /rest/deployments/c86f18f1-a611-470e-8a11-1645b70b63c7
              virtualMachineProfileUri: /rest/virtual-machine-profiles/a464ecd0-d16d-447d-af41-ff7437df2a09
              zoneUri: /rest/zones/c2b6e308-4b99-4b96-9b2c-835de6a56a8c
          schema:
            $ref: '#/definitions/deployment'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
    patch:
      consumes:
      - application/json-patch+json
      description: Updates a deployment. **Requires any project role, or 'administrator'
        or 'project creator' global role**. Allowed fields for PATCH of deployments
        are name(add,replace), volumes(add), k8snumWorkers(add), userData(add), serviceInput(add),
        version(add).
      operationId: UpdateDeployment
      parameters:
      - description: ID of deployment to update
        in: path
        name: id
        required: true
        type: string
      - description: Update deployment
        in: body
        name: deployment
        required: true
        schema:
          $ref: '#/definitions/patchDeployment'
      responses:
        "200":
          description: Deployment sucessfully updated.
          examples:
            'Update name of deployment: /rest/deployments/825039a0-f2eb-4cd3-8112-6e91375bcebf':
              Request Body:
              - op: replace
                path: /name
                value: new_name_for_deployment
              Response Body:
                created: "2017-09-14T19:53:33Z"
                hasConsole: false
                id: 825039a0-f2eb-4cd3-8112-6e91375bcebf
                modified: "2017-09-14T19:58:33Z"
                name: testnew_name_for_deployment
                projectUri: /rest/projects/930381ba921b47c39960371d4145e0d2
                regionUri: /rest/regions/v3d6e308-4b99-4b96-9b2c-835de6a5987c
                status: Ok
                uri: /rest/deployments/825039a0-f2eb-4cd3-8112-6e91375bcebf
          schema:
            $ref: '#/definitions/deployment'
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
  /deployments/{id}/actions:
    post:
      description: Peforms an action to change the state of a deployment. It requires
        any project role, or the **administrator** or **project creator** global role.
      operationId: ActOnDeployment
      parameters:
      - description: ID of deployment to act on
        in: path
        name: id
        required: true
        type: string
      - description: Action to perform
        in: body
        name: action
        required: true
        schema:
          $ref: '#/definitions/deploymentAction'
      responses:
        "200":
          description: Deployment action sucessfully initiated.
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
  /deployments/{id}/console:
    post:
      description: Returns a deployment console URL for deployment
      operationId: GetDeploymentConsoleURL
      parameters:
      - description: ID of deployment for which console URL is required
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Successfully got deployment console URL.
          examples:
            Get Deployment Console URL:/rest/deployments/917b0738-351a-4a9e-b8c9-f1d1fdc804f3/console: http://172.18.196.154:6080/vnc_auto.html?token=9762a8af-c014-461f-9e61-5b955142e55e
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
  /deployments/{id}/kubeconfig:
    get:
      description: Returns the kubeconfig. Applicable only to deployments of Kubernetes
        cluster. **Requires 'consumer' role on workspace**
      operationId: GetDeploymentKubeConfig
      parameters:
      - description: ID of deployment for which kubeconfig is required
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Successfully got the kubeconfig.
          examples:
            Get KubeConfig:/rest/deployments/917b0738-351a-4a9e-b8c9-f1d1fdc804f4/kubeconfig: 'apiVersion:
              v1 clusters: - cluster: certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUKYRENDQWtTZ0F3SUJBZ0lKQVA3ckt3VjRWeUUiTUEwR0NTcUdTSWIzRFFFQkN3VUFNQ014SVRBZkJnTlYKQkFNTUddDFZbVZ5Ym1WMFpYTXRZMkZBTVRVd09EazFOelUxTWpBZUZ3MHhOekV3TWpVeE9EVXlNekphRncweQpOekV3TWpNeE9EVXlNekphTUNNeElUQWZCZ05WQkINTUdHdDFZbVZ5Ym1WMFpYTXRZMkZBTVRVd09EazFOelUxCk1qQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQVBTaTBrTzJNQkQyZDF2ci9ZT2oKbDlZYm9MNm5FYm1NekVPNW5PT3RSdGg2UnBRNmMwRXhuOVkwUGcxYVY3bnFYWDhTaUFVVk9KS2tvTGcybkpBcAorWStVQ2NWYUI0NlBSS1JvZGQ2U29nWmREaEEvUWFMcUdJaE1jaXF0eVZNbE5oVmZaYkdUaWc5LGtWRjJrRzJqeHpFM2pRdXVEdVlWd0MKeTgyNkc1NUlhU2FCZXB4bG43QWtwZTJkalpGTnBZMThOamxyWGpwRjZCeTZaOFhxUXZQbkFlMHUxbW5JQTPISKwpyc2ZvMVk0dWRGVUJrS0xveHFCeTN6aXl1U0cwcmxiSUhRVFNpTXRHd0ZsRkUzZlNNSDVQM0IzaEFNY2Juem9hCnNlMENBd0VBQWFPQmtqQ0JqekFkQmdOVkhRNEVGZ1FVVnIrc01JdlZPUDNET2NkWVRkdURFN2ZicYhNd1V3WUQKVlIwakJFd3dTb0FVVnIrc01JdlZPUDNET2NkWVRkdURFN2ZiazFOelUxTW9JSkFQN3JLd1Y0VnlFME1Bd0dBMVVkRXdRRk1BTUJBZjh3CkN3WURWUjBQmdzRMUFYKUTJNcm83S3h6Z0FOQlNlMldQQkZqblRFQ2M0SjY2M1lGWGZCSTBzRXEwWFc0MzhFS1hORFV6emNxZVJmZVc0OQp6SlFaQVlONkZSaTh2bG9jVUZrd1ZjVEN2ckRQVUx1MVFtc0UwL1h5dGRKZ1FKMEpYRE10NG5TWE9OTVFyTDZMCm5CSXVkbzRYWmNDbW1DVUp0UXBwZEZ3dEV1SGJoRm80NW4yUVUrbHZQdTVVdmFrL3RrOFRRL29iQ0pYSXA1YlQKaDg4eFZsMkZOOWpxMVhLWEtSbSsvWkpFbGpTaTE0eVVoZE0xZFVkTWEvaHRUUjhTU0x7dEhjWiszdVYxaE5GVQp8OWNhS2ZvdW1DcDBvRElQRC6EeThwMjlNVmxRMEu5RXNKcnhzTU5sU1BvZEZCL0kvb0tvTVdUbUIxdXhLcTVwCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
              server: https://demoapi.dev.hpedevops.net name: demo contexts: - context:
              cluster: demo namespace: default user: email@hpe.com name: default current-context:
              default kind: Config preferences: {} users: - name: email@hpe.com user:
              token: eyJ1c2VybmFtZSI7IrtpvmFuLKt1bWZS5j0iLCJqYXNzd29yZCI6Ik4zd3S0OHNrISJ8'
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
  /events:
    get:
      description: Returns events based on the supplied criteria. **Not implemented**
      operationId: FindEvents
      parameters:
      - description: Resource to prune events by.
        in: query
        name: resourceUri
        type: string
      responses:
        "200":
          description: List of events
          schema:
            $ref: '#/definitions/eventList'
  /keypairs:
    get:
      description: Get keypairs (per region, per user). Currently a projectUri is
        required
      operationId: ListKeypairs
      parameters:
      - in: query
        name: regionUri
        required: true
        type: string
      - in: query
        name: projectUri
        required: true
        type: string
      responses:
        "200":
          description: List of keypairs
          schema:
            $ref: '#/definitions/keypairList'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
  /membership-roles:
    get:
      description: Returns membership (project-specific) roles.
      operationId: ListMembershipRoles
      responses:
        "200":
          description: List of roles
          schema:
            $ref: '#/definitions/membershipRoleList'
  /memberships:
    delete:
      description: Delete a membership. It requires the **administrator** or **project
        creator** global role or the **project owner** role on the project.
      operationId: DeleteMember
      parameters:
      - description: Delete membership
        in: body
        name: membership
        required: true
        schema:
          $ref: '#/definitions/membership'
      responses:
        "204":
          description: New membership sucessfully created.
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
    get:
      description: |
        Returns memberships. Supports filtering by projectUri, userUri, userGroupUri, roleUri (but only
        individual values, not multiple) in 'query'.

        If projectURI and userUri/userGroupUri are given a different
        backend path will be used that should be authorized to a project owner even if they wouldn't ordinarily
        be able to see other users' roles.

        It requires the **administrator** or **project creator** global role or the **project owner** role on the project.
        **project owner** requires **projectUri** to be supplied.
      operationId: FindMembers
      parameters:
      - description: URI query to prune memberships by. An example of query can be</BR>
          'projectUri EQ e0300a831e2740a4aad680cd89115845'</BR> OR </BR>'userUri EQ
          e0300a831e2740a4aad680cd89115845'</BR> OR </BR>'roleUri EQ e0300a831e2740a4aad680cd89115845'
        in: query
        name: query
        required: true
        type: string
      responses:
        "200":
          description: List of memberships
          schema:
            $ref: '#/definitions/membershipList'
    post:
      description: Creates a new membership. It requires the **administrator** or
        **project creator** global role or **project owner** role on the project.
      operationId: CreateMember
      parameters:
      - description: Add new membership
        in: body
        name: membership
        required: true
        schema:
          $ref: '#/definitions/membership'
      responses:
        "200":
          description: Membership existed already
          schema:
            $ref: '#/definitions/membership'
        "201":
          description: New membership sucessfully created.
          schema:
            $ref: '#/definitions/membership'
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
  /metrics:
    get:
      description: |
        Returns all metrics based on the supplied criteria. It requires the **analyst** role.
        It requires one and only one of resourceUri or category to be specified.
      operationId: FindMetrics
      parameters:
      - collectionFormat: multi
        description: |
          Resource(s) to return metrics for. It is invalid to specify this property if a category, cluster, or tag property is provided.
          </br> **resourceUri examples:**
          </br> GET /rest/metrics?**resourceUri=/rest/projects/85609a9e-31f5-4c7b-bd54-1ba50136bdf6**&periodStart=2017-09-01T00:00:00Z&period=hour&periodCount=-2&name=resource.cores.allocation </br>
        in: query
        items:
          type: string
        name: resourceUri
        type: array
      - collectionFormat: multi
        description: |
          A category name. Include resources that are in this category. This can be combined with the query property to filter resources. It is invalid to specify this property if a resourceUri property is provided.
          </br> **category examples:**
          </br> *Get the cost.usage for all providers:*
          GET /rest/metrics?"**category=providers&name=cost.usage**&periodStart=2017-12-01T00:00:00Z&period=month&periodCount=-1&view=full"
          </br> *Get the cost.usage for all projects:*
          GET /rest/metrics?"**category=projects&name=cost.usage**&periodStart=2017-12-01T00:00:00Z&period=month&periodCount=-1&view=full"
        in: query
        items:
          enum:
          - providers
          - projects
          - provider-services
          type: string
        name: category
        type: array
        uniqueItems: true
      - description: |
          A value to group the data by. It is invalid to specify this property if a resourceUri property is provided.
          </br> **groupBy examples:**
          </br> *Get the cost.total for all providers grouped by provider type:*
          GET /rest/metrics?"**category=providers&name=cost.total&groupBy=providerTypeUri**&periodStart=2017-12-01T00:00:00Z&period=month&periodCount=-2&view=full"
          </br> *Get the cost.usage for all providers grouped by provider type:*
          GET /rest/metrics?"**category=providers&name=cost.usage&groupBy=providerTypeUri**&periodStart=2017-12-01T00:00:00Z&period=month&periodCount=-1&view=full"
          </br> *Get the cost.usage for all provider sservices grouped by provider service type:*
          GET /rest/metrics?"**category=provider-services&name=cost.usage&groupBy=providerServiceTypeUri**&periodStart=2017-12-01T00:00:00Z&period=month&periodCount=-1&view=full"
        in: query
        name: groupBy
        type: string
      - collectionFormat: multi
        description: |
          A query to filter the resources by. For now, 'EQ' & 'AND' are the only supported operators. It is invalid to specify this property if a resourceUri property is provided.
          This parameter is only valid for cost metrics
          </br> **query examples:**
          </br> *Get the cost.usage for all projects grouped by the tag key where the tag key is line-of-business:*
          GET /rest/metrics?"**category=projects&name=cost.usage&groupBy=tagKeyUri&query=tagKeyUri+EQ+/rest/tag-keys/line-of-business**&periodStart=2017-10-01T00:00:00Z&period=month&periodCount=1"
          </br> *Get the cost.usage for all provider services grouped by provider service type for a specific provider:*
          GET /rest/metrics?"**category=provider-services&name=cost.usge&groupBy=providerServiceTypeUri&query=providerUri+EQ+/rest/providers/:id**&periodStart=2017-10-01T00:00:00Z&period=month&periodCount=1&view=full"
          </br> *Get the cost.usage for all provider services grouped by provider service type with the tag of line-of-business=incubation for a specific provider:*
          GET /rest/metrics?"**category=provider-services&name=cost.usge&groupBy=providerServiceTypeUri&query=tagUris+EQ+/rest/tags/line-of-business=incubation+AND+providerUri+EQ+/rest/providers/:id**&periodStart=2017-10-01T00:00:00Z&period=month&periodCount=1&view=full" </br>
        in: query
        items:
          type: string
        name: query
        type: array
      - collectionFormat: multi
        description: |
          Name(s) of metrics to return. Metric names are associated with resources. Multiple metric names can be specified.
          </br>
          **Score Card Metrics**
          ----------------
          **name:**
            - score.availability
            - score.utilization
            - score.performance
            - score.overall

          **units:** Does not apply for any score metrics.
          **category:**
            - providers
            - regions
            - zones

          **resourceUri**
           - /rest/providers/:id
           - /rest/regions/:id
           - /rest/zones/:id

          **period:** Either **'month'**, **`day`**, or **`hour`** can be used for Score Card Metrics.
          **periodCount:** Always **non-zero integer** for Score Card Metrics.
          </br>
          **Cost Metrics**
          ----------------
          **name:**
            - cost.fixed
            - cost.usage
            - cost.efficiency
            - cost.total
            - cost.savings

          **units:** Always **`USD`** except for **`cost.efficiency`**, which has **percent** for the units.
          **category:**
            - providers
            - projects
            - provider-services

          **resourceUri**
           - /rest/providers/:id
           - /rest/projects/:id
           - /rest/provider-services/:id

          **groupBy:**
            - valid groupBy params for ***providers***
              - providerTypeUri
            - valid groupBy params for ***projects***
              - tagKeyUri (**note** *requires that either query=tagKeyUri or query=tagUris is used in conjunction with it*)
            - valid groupBy params for ***provider-services***
              - providerServiceTypeUri

          **query:**
            - valid query params for ***providers***
              - id
              - name
              - uri
              - providerTypeUri
            - valid query params for ***projects***
              - id
              - name
              - uri
              - providerTypeUri
              - providerUri
              - tagUris
            - valid query params for ***provider-services***
              - id
              - name
              - uri
              - providerServiceTypeUri
              - providerTypeUri
              - providerUri
              - projectUri
              - tagUris

          **period:** Always **`month`** for Cost Metrics.
          **periodStart:** Always start of month for Cost Metrics (e.g. 2017-10-01T00:00:00Z, not 2017-10-04T00:00:00Z), defaults to current month.
          **periodCount:** Always **`non-zero integer`** for Resource Usage Metrics.

          </br>
          **Resource Score Drill Down Metrics**
          ----------------
          **name:** (and units)
            - server.cpu.total (cores)
            - vm.cpu.total (cores)
            - server.cpu.usage (cores)
            - vm.cpu.usage (cores)
            - server.memory.total (GB)
            - server.memory.usage (GB)
            - storage.total (GB)
            - storage.available (GB)
            - server.cpu.utilization (percent)
            - server.memory.utilization (percent)
            - vm.cpu.utilization (percent)
            - server.network.in_packets (packets/second)
            - server.network.in_packet_errors (errors/second)
            - server.network.in_packet_drops (drops/second)
            - server.network.out_packets (packets/second)
            - server.network.out_packet_errors (errors/second)
            - server.network.out_packet_drops (drops/second)
            - server.status_checks (None)
            - vm.status_checks (None)
            - server.status_down (None)
            - vm.status_down (None)
            - vm.volume.queue_length (None)
            - vm.iops.current (Count/s)
            - vm.iops.peak (Count/s)

          **category:** `N/A` ** Not currently implemented
          **resourceUri**
           - /rest/provider-types/:id
           - /rest/providers/:id
           - /rest/regions/:id
           - /rest/zones/:id

          **period:** Either **`day`** or **`hour`** can be used for Resource Score Drill Down Metrics.
          **periodCount:** Always **non-zero integer** for Score Drill Down Metrics.
          </br> **example:** score.availability
        in: query
        items:
          enum:
          - score.availability
          - score.utilization
          - score.performance
          - score.overall
          - cost.efficiency
          - cost.fixed
          - cost.usage
          - server.cpu.total (cores)
          - vm.cpu.total (cores)
          - server.cpu.usage (cores)
          - vm.cpu.usage (cores)
          - server.memory.total (GB)
          - server.memory.usage (GB)
          - storage.total (GB)
          - storage.available (GB)
          - server.cpu.utilization (percent)
          - server.memory.utilization (percent)
          - vm.cpu.utilization (percent)
          - server.network.in_packets (packets/second)
          - server.network.in_packet_errors (errors/second)
          - server.network.in_packet_drops (drops/second)
          - server.network.out_packets (packets/second)
          - server.network.out_packet_errors (errors/second)
          - server.network.out_packet_drops (drops/second)
          - server.status_checks (None)
          - vm.status_checks (None)
          - server.status_down (None)
          - vm.status_down (None)
          - vm.volume.queue_length (None)
          - vm.iops.current (Count/s)
          - vm.iops.peak (Count/s)
          type: string
        name: name
        required: true
        type: array
      - description: |
          When the metric value(s) should be measured from. This must be aligned to the period requested. For instance, if the period is 'hour', this value must be at the top of an hour.
          If not specified, it will default to the latest time for which the data is expected to be valid, aligned to the period boundary. For costs, this will be the start of the current UTC period. For scores (and score drill down metrics), this will be the previous hour, unless the current UTC time is less than 5 minutes into the current hour, in which case it will be 2 hours previous. For example, if periodStart is not specified, score metrics are requested and the current time is 2017-06-01T21:03:00 UTC, scores will be returned for 2017-06-01T19:00:00Z, however if current time is 2017-06-01T21:05:00 UTC, scores will be returned for 2017-06-01T20:00:00Z. If periodStart is not specified, period is hour, cost metrics are requested and the current time is 2017-06-01T21:03:00 UTC, metrics will be returned for 2017-06-01T21:00:00Z
          **example:** 2017-06-01T00:00:00Z
        format: date-time
        in: query
        name: periodStart
        type: string
      - description: |
          How much time to cover per data point. Certain metric names may support only a subset of these options. Scores support a period of 'day' or 'hour'. Costs only support a period of 'month'. Resources support a period of 'day' or 'hour'. 422 or 400 is returned if the metric name is not supported.
          **example:** hour
        enum:
        - month
        - day
        - hour
        in: query
        name: period
        required: true
        type: string
      - description: |
          How many period data points to return relative to the periodStart time. This value can be positive or negative.  Zero is invalid.
          **default:** 1
        in: query
        name: periodCount
        type: integer
      - description: |
          Whether to return related content. This is to make it so that only one call is needed to return all the needed information. Not currently supported for scores.
          </br> *example:*
          GET /rest/metrics?category=deployments&category=service-types&query=tagUri+EQ+/rest/tags/line-of-business=incubation&periodStart=2017-08-01T00%3A00%3A00Z&period=month&periodCount=-1&name=cost.usage&**view=full** </br>
        enum:
        - full
        in: query
        name: view
        type: string
      - description: |
          Index into the response members to allow pagination. Use in conjunction with the 'count' parameter to paginate through many metrics. **Not Implemented**
        in: query
        name: start
        type: integer
      - description: |
          Maximum number of response members to return. Use in conjunction with the 'start' parameter to paginate through many metrics. **Not Implemented**
        in: query
        name: count
        type: integer
      responses:
        "200":
          description: List of metrics
          schema:
            $ref: '#/definitions/metricList'
  /networks:
    get:
      description: Returns networks. It requires any project role or non-'consumer'
        global role.
      operationId: FindNetworks
      parameters:
      - description: |
          Filters the networks returned.

          It supports equality
          comparison against one or more properties using a
          ``"name EQ value"`` syntax. Multiple comparisons can be combined
          using a ``"name1 EQ value1 AND name2 EQ value2"`` syntax.

          It supports comparison of **zoneUri** and **projectUri**. zoneUri is
          required to be specified.

          For example: ``query="zoneUri EQ /rest/zones/xxxx"``
        in: query
        name: query
        required: true
        type: string
      responses:
        "200":
          description: List of networks
          schema:
            $ref: '#/definitions/networkList'
  /networks/{id}:
    get:
      description: Returns a network based on its id. It requires any project role
        or non-'consumer' global role.
      operationId: GetNetworkById
      parameters:
      - description: ID of network to fetch
        in: path
        name: id
        required: true
        type: string
      - description: |
          Filters the networks returned.

          It supports equality comparison against one property using a
          ``"name EQ value"`` syntax.

          It supports comparison of **zoneUri**. zoneUri is
          required to be specified.

          For example: ``query="zoneUri EQ /rest/zones/xxxx"``
        in: query
        name: query
        required: false
        type: string
      responses:
        "200":
          description: Network response
          schema:
            $ref: '#/definitions/network'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
    patch:
      description: Updates a network. It requires the **administrator** global role.
      operationId: ModifyNetwork
      parameters:
      - description: ID of the network to update
        in: path
        name: id
        required: true
        type: string
      - description: Update network
        in: body
        name: network
        required: true
        schema:
          $ref: '#/definitions/updateNetwork'
      responses:
        "200":
          description: Network sucessfully updated.
          schema:
            $ref: '#/definitions/network'
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
  /onboarding/azure/properties:
    get:
      description: Returns a properties object needed to build the Azure login url
      operationId: GetAzureLoginProperties
      responses:
        "200":
          description: Azure Login Properties
          schema:
            $ref: '#/definitions/azureLoginProperties'
  /onboarding/azure/provider-info:
    get:
      description: Returns the provider information required to add an Azure provider
      operationId: getAzureProviderInfo
      parameters:
      - description: |
          The Azure Directory URI associated with the Subscription
          For Example:
          myActiveDirectory.onmicrosoft.com
        in: query
        name: directoryUri
        required: true
        type: string
      - description: |
          The full response Azure sends to the redirectURI including valid Azure authentication code
          For Example:
          https://customername.hpeonesphere.net/rest/azureauth/?code=1234ABCD&state=5678&session_state=90EF
        in: query
        name: location
        required: true
        type: string
      responses:
        "200":
          description: Azure Provider Information
          schema:
            $ref: '#/definitions/azureProviderInfo'
        "400":
          description: Bad Request</BR> Error Codes</BR>InvalidAzureResponseURI azure
            response uri must be a valid uri</BR>InvalidTenantID invalid tenant ID
          schema:
            $ref: '#/definitions/error'
        "403":
          description: Unauthorized</BR> Error Codes</BR>NoAuthCodeProvided getAuthCodeResponse
            did not contain auth code</BR>InvalidAuthCode the provided code is invalid</BR>InvalidGrant
            The auth code has expired
          schema:
            $ref: '#/definitions/error'
  /onboarding/azure/subscriptions:
    get:
      description: Returns a list of Azure subscriptions and their display names
      operationId: ListAzureSubscriptions
      parameters:
      - description: |
          The Azure Directory URI associated with the Subscription
          For Example:
          myActiveDirectory.onmicrosoft.com
        in: query
        name: directoryUri
        required: true
        type: string
      - description: |
          The full response Azure sends to the redirectURI including valid Azure authentication code
          For Example:
          https://customername.hpeonesphere.net/rest/azureauth/?code=1234ABCD&state=5678&session_state=90EF
        in: query
        name: location
        required: true
        type: string
      responses:
        "200":
          description: Subscription list
          schema:
            $ref: '#/definitions/azureSubscriptionList'
        "400":
          description: Bad Request</BR> Error Codes</BR>InvalidAzureResponseURI azure
            response uri must be a valid uri</BR>InvalidTenantID invalid tenant ID
          schema:
            $ref: '#/definitions/error'
        "403":
          description: Unauthorized</BR> Error Codes</BR>NoAuthCodeProvided getAuthCodeResponse
            did not contain auth code</BR>InvalidAuthCode the provided code is invalid</BR>InvalidGrant
            The auth code has expired
          schema:
            $ref: '#/definitions/error'
  /onboarding/azure/subscriptions/{subscriptionId}:
    patch:
      consumes:
      - application/json-patch+json
      description: Updates a subscription
      operationId: UpdateSubscription
      parameters:
      - description: The Azure subscriptionId
        in: path
        name: subscriptionId
        required: true
        type: string
      - description: |
          The Azure Directory URI associated with the Subscription
          For Example:
          myActiveDirectory.onmicrosoft.com
        in: query
        name: directoryUri
        required: true
        type: string
      - description: |
          The full response Azure sends to the redirectURI including valid Azure authentication code
          For Example:
          https://customername.hpeonesphere.net/rest/azureauth/?code=1234ABCD&state=5678&session_state=90EF
        in: query
        name: location
        required: true
        type: string
      - description: Update subscription
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/updateSubscription'
      responses:
        "201":
          description: Subscription
          schema:
            $ref: '#/definitions/azureSubscription'
        "400":
          description: Bad Request</BR> Error Codes</BR>InvalidAzureResponseURI azure
            response uri must be a valid uri</BR>InvalidTenantID invalid tenant ID</BR>InvalidSubscriptionID
            invalid subscription ID</BR>FailedRoleApply Azure failed to add OneSphere
            role to subscription</BR>UnsupportedRemoveRole Removing the OneSphere
            role is unimplemented
          schema:
            $ref: '#/definitions/error'
        "403":
          description: Unauthorized</BR> Error Codes</BR>NoAuthCodeProvided getAuthCodeResponse
            did not contain auth code</BR>InvalidAuthCode the provided code is invalid</BR>InvalidGrant
            The auth code has expired
          schema:
            $ref: '#/definitions/error'
  /password-reset:
    post:
      description: Request a single-use password reset token.
      operationId: CreatePasswordReset
      parameters:
      - in: body
        name: passwordResetRequest
        required: true
        schema:
          $ref: '#/definitions/passwordResetRequestInput'
      responses:
        "202":
          description: |
            Accepted; no response. Email will be sent. No indication is given if the user does not exist (but no email will be sent).
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
  /password-reset/change:
    post:
      description: Process a password reset.
      operationId: ProcessPasswordReset
      parameters:
      - description: Password reset information
        in: body
        name: passwordReset
        required: true
        schema:
          $ref: '#/definitions/passwordReset'
      responses:
        "200":
          description: |
            Body will include the user definition (can e.g. redirect to a login page with the user's email address)
          schema:
            $ref: '#/definitions/user'
        "400":
          description: Token is invalid or password does not meet criteria.
          schema:
            $ref: '#/definitions/error'
  /projects:
    get:
      description: Returns projects. It requires any project role or non-'consumer'
        global role.
      operationId: FindProjects
      parameters:
      - description: |
          Filters the projects returned.

          It performs a case insensitive comparison of the supplied string
          value with the **name** property.

          For example: ``userQuery="exp"``
        in: query
        name: userQuery
        required: false
        type: string
      - description: |
          Return related resources:
            * `full` - Any deployments in the project; any tags referred to by tagUris (**not implemented**)
        enum:
        - full
        in: query
        name: view
        type: string
      responses:
        "200":
          description: List of projects
          schema:
            $ref: '#/definitions/projectList'
    post:
      description: Creates a new project. It requires the **project-owner** project
        role, or **administrator** or **project creator** global role.
      operationId: CreateProject
      parameters:
      - description: Add new project
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/createProject'
      responses:
        "201":
          description: New project sucessfully created.
          schema:
            $ref: '#/definitions/project'
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
  /projects/{id}:
    delete:
      description: |
        Deletes a project. If resources (currently Deployments) exist within the project they must first be deleted. In this case, the response will be a 409 Conflict with the body listing the first ten offending items. It requires **administratpor** global role or **owner** project role. **not implemented**
      parameters:
      - in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Project deleted; no response content
        "403":
          description: Forbidden; not allowed to delete the project.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Conflict; resources still exist belonging to the projects
          schema:
            $ref: '#/definitions/error'
    get:
      description: Returns a project based on its id. It requires any project role
        or non-consumer global role.
      operationId: GetProjectById
      parameters:
      - description: ID of project to fetch
        in: path
        name: id
        required: true
        type: string
      - description: |
          Return related resources:
            * `full` - Any deployments in the project; any tags referred to by tagUris (**not implemented**)
        enum:
        - full
        in: query
        name: view
        type: string
      responses:
        "200":
          description: Project response
          schema:
            $ref: '#/definitions/project'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
    patch:
      description: Updates a project. It requires the **administrator** global role
        or the **project owner** role on a project.
      operationId: UpdateProject
      parameters:
      - description: ID of project to update
        in: path
        name: id
        required: true
        type: string
      - description: Update project
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/updateProject'
      responses:
        "200":
          description: Project sucessfully updated.
          schema:
            $ref: '#/definitions/project'
        "400":
          description: Bad Request</BR> Error Codes</BR>ErrProviderInUseKey Project
            cannot be deleted. It is associated with a provider.
          schema:
            $ref: '#/definitions/error'
  /provider-types:
    get:
      description: Returns provider types.
      operationId: FindProviderTypes
      responses:
        "200":
          description: List of provider types
          schema:
            $ref: '#/definitions/providerTypeList'
  /providers:
    get:
      description: Returns providers. It requires the **consumer** global role.
      operationId: FindProviders
      parameters:
      - description: |
          Filters the providers returned.

          It supports equality
          comparison against one or more properties using a
          ``"name EQ value"`` syntax. Multiple comparisons can be combined
          using a ``"name1 EQ value1 AND name2 EQ value2"`` syntax.

          It supports comparison of **providerTypeUri** and **projectUri**.

          For example: ``query="providerTypeUri EQ /rest/provider-types/aws"``
        in: query
        name: query
        required: false
        type: string
      responses:
        "200":
          description: List of providers. AWS credentials are not included when listing
            providers.
          schema:
            $ref: '#/definitions/providerList'
    post:
      description: Creates a new Master provider or Member provider.
      operationId: CreateProvider
      parameters:
      - description: Add new provider
        in: body
        name: provider
        required: true
        schema:
          $ref: '#/definitions/createProvider'
      responses:
        "201":
          description: New provider sucessfully created and enabled.
          schema:
            $ref: '#/definitions/provider'
        "202":
          description: New provider sucessfully accepted for creation. Creation may
            not be complete.
          schema:
            $ref: '#/definitions/provider'
        "400":
          description: Bad Request</BR> Error Codes</BR>InvalidProviderTypeURI Invalid
            provider type URI</BR>ErrInvalidInitialProviderState Initial provider
            state can be Enabled or Disabled</BR>NotAMemberAccount An attempt was
            made to create Member provider with Master AWS Account</BR>ErrProviderIdMandatoryForMemberWhenNotEnabled
            Id is mandatory for state 'Not Enabled' Member </BR>ErrIncorrectMasterAccount
            The master account supplied is not the Master Account for this Member
            account</BR>InvalidSignatureException Invalid Secrey Key</BR>UnrecognizedClientException
            The Access Key included in the request is invalid</BR>ErrCodeAccessDeniedException
            This could happen if access has not been set to ListAccount for Master
            account and to DescribeAccount for Member account</BR>ErrCodeAccountNotFoundException
            Account not found in AWS</BR>ErrCodeAWSOrganizationsNotInUseException
            AWS Organization is not in use</BR>ErrCodeTooManyRequestsException AWS
            detects it is under DOS attack</BR>ErrInvalidCostBucket Invalid S3 cost
            bucket</BR>ErrInvalidAWSKeys Invalid AWS keys</BR>ErrAccessDeniedForCostBucket
            Access denied for the cost bucket</BR>ErrInvalidCostBucketRegion Invalid
            Cost bucket region</BR>ErrCannotOnBoardWithRootCreds Please use credential
            for a user and not for an account.</BR>ErrInvalidProjectURIKey Check if
            the provided projectUri is valid.</BR>ErrProjectURIRequiredKey projectUri
            is required field for AWS Provider type.</BR>ErrProjectURIInUseKey projectUri
            is already associated with another AWS provider. Only one provider can
            be associated with a project.
          schema:
            $ref: '#/definitions/error'
  /providers/{id}:
    delete:
      description: Deletes a master provider or a child provider
      operationId: DeleteProviderById
      parameters:
      - description: ID of provider to delete
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Provider deleted
        "400":
          description: Following could be the reason for Bad Request. </BR>ErrCannotDeleteChildProvidersStillExist:If
            a Master provider is requested to be deleted Child providers mut be deleted
            first.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Not Authorized.
        "403":
          description: Forbidden
        "404":
          description: Not Found.
    get:
      description: Returns a provider based on its id. It requires the **consumer**
        global role.
      operationId: GetProviderById
      parameters:
      - description: ID of provider to fetch
        in: path
        name: id
        required: true
        type: string
      - description: Whether to return related content.
        enum:
        - full
        in: query
        name: view
        type: string
      - description: Will return the merged set of regions from AWS and existing regions
          in Onesphere.
        enum:
        - true
        - false
        in: query
        name: discover
        type: boolean
      responses:
        "200":
          description: Provider found
          schema:
            $ref: '#/definitions/provider'
        "400":
          description: Bad Request</BR> Error Codes</BR>ErrAccessKeyOrSecretKeyCannotBeEmptyKey
            The aws access key and access previously stored cannot be empty</BR>ErrCodeAccessDeniedException
            This could happen if discover=true and the right access has not been set</BR>ErrCodeAccountNotFoundException
            Master Account not found in AWS</BR>ErrCodeAWSOrganizationsNotInUseException
            AWS Organization is not in use</BR>ErrCodeTooManyRequestsException AWS
            detects it is under DOS attack</BR>ErrCannotDiscoverChildProvider Only
            Master paying account is allowed to discover</BR>ErrCanDiscoverOnlyWhenViewIsFull
            Discover is allowed only when view=full
          schema:
            $ref: '#/definitions/error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
    patch:
      consumes:
      - application/json-patch+json
      description: Updates a provider.
      operationId: UpdateProvider
      parameters:
      - description: ID of provider to update
        in: path
        name: id
        required: true
        type: string
      - description: Update provider
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/updateProvider'
      responses:
        "200":
          description: Provider sucessfully updated.
          schema:
            $ref: '#/definitions/provider'
        "400":
          description: Bad Request</BR> Error Codes</BR>InvalidProviderTypeURI Invalid
            provider type URI</BR>ErrInvalidInitialProviderState Initial provider
            state can be Enabled or Disabled</BR>ErrIncorrectMasterAccount The master
            account supplied is not the Master Account for this Member account</BR>InvalidSignatureException
            Invalid Secrey Key</BR>UnrecognizedClientException The Access Key included
            in the request is invalid</BR>ErrCodeAccessDeniedException This could
            happen if access has not been set to ListAccount for Master account or
            GetUser for Member Account</BR>ErrCodeAccountNotFoundException Account
            not found in AWS</BR>ErrCodeTooManyRequestsException AWS detects it is
            under DOS attack</BR>ErrInvalidCostBucket Invalid S3 cost bucket</BR>ErrInvalidAWSKeys
            Invalid AWS keys</BR>ErrAccessDeniedForCostBucket Access denied for the
            cost bucket</BR>ErrInvalidCostBucketRegion Invalid Cost bucket region</BR>ErrCannotOnBoardWithRootCreds
            Please use credential for a user and not for an account.</BR>ErrProjectCannotBeChangedKey
            ProjectURI cannot be modified once set
          schema:
            $ref: '#/definitions/error'
  /rates:
    get:
      description: |
        Returns rates. It requires the **administrator** global role.

        Optionally this list may be filtered, or the default rates specified with a resourceUri of 'default'.
      operationId: listRates
      parameters:
      - collectionFormat: multi
        description: |
          Resource(s) to return rates for. N.B. a resourceUri of 'default' will obtain a skeleton set of the default rates
        in: query
        items:
          type: string
        name: resourceUri
        type: array
      - description: |
          The date for which returned rates need be effective, a special filter that allows a search for a rate that would be effective on a date.  That is, to allow a search for a rate whose effective date is on or before the specified effectiveForDate.
        format: date
        in: query
        name: effectiveForDate
        type: string
      - description: |
          The specific effective date to filter by.
        format: date
        in: query
        name: effectiveDate
        type: string
      - description: |
          The metric name to filter by.
        in: query
        name: metricName
        type: string
      - description: |
          Filter for active or inactive rates.
        in: query
        name: active
        type: boolean
      - description: |
          Index into the response members to allow pagination. Use in conjunction with the 'count' parameter to paginate through many rates.
        in: query
        name: start
        type: integer
      - description: |
          Maximum number of response members to return. Use in conjunction with the 'start' parameter to paginate through many rates.
        in: query
        name: count
        type: integer
      responses:
        200:
          description: List of rates
          schema:
            $ref: '#/definitions/rateList'
  /rates/{id}:
    get:
      description: Retrieve a rate by id. It requires the **administrator** global
        role.
      operationId: getRateById
      parameters:
      - description: Id of the rate to be retrieved
        in: path
        name: id
        required: true
        type: string
      responses:
        200:
          description: Request received and rate retrieved.
          schema:
            $ref: '#/definitions/rate'
  /regions:
    get:
      description: Returns regions. It requires the **consumer** global role.
      operationId: FindRegions
      parameters:
      - description: |
          Filters the regions returned.

          It supports equality
          comparison against one or more properties using a
          ``"name EQ value"`` syntax. Multiple comparisons can be combined
          using a ``"name1 EQ value1 AND name2 EQ value2"`` syntax.

          It supports comparison of **providerUri**.

          For example: ``query="providerUri EQ /rest/providers/xxxx"``
        in: query
        name: query
        required: false
        type: string
      - description: Whether to return related content.
        enum:
        - full
        in: query
        name: view
        type: string
      responses:
        "200":
          description: List of regions
          schema:
            $ref: '#/definitions/regionList'
    post:
      description: Creates a new region.
      operationId: CreateRegion
      parameters:
      - description: Add new region
        in: body
        name: region
        required: true
        schema:
          $ref: '#/definitions/createRegion'
      responses:
        "201":
          description: New region sucessfully created.
          schema:
            $ref: '#/definitions/region'
        "202":
          description: New region is accepted for creation.
          schema:
            $ref: '#/definitions/region'
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
  /regions/{id}:
    delete:
      description: Deletes a region
      operationId: Delete Region
      parameters:
      - description: ID of region to delete
        in: path
        name: id
        required: true
        type: string
      - description: Region may be in an odd state. Force will attempt to delete again
          no matter the state.
        in: query
        name: force
        required: false
        type: boolean
      responses:
        "202":
          description: Region accepted for deletion
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
    get:
      description: Returns a region based on its id. It requires the **consumer**
        global role.
      operationId: GetRegionById
      parameters:
      - description: ID of region to fetch
        in: path
        name: id
        required: true
        type: string
      - description: Whether to return related content.
        enum:
        - full
        in: query
        name: view
        type: string
      - description: will return child providers from aws.
        enum:
        - true
        - false
        in: query
        name: discover
        type: boolean
      responses:
        "200":
          description: Region response
          schema:
            $ref: '#/definitions/region'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
    patch:
      consumes:
      - application/json-patch+json
      description: Patches a region. PATCH only supports provider type(/rest/provider-types/ncs).
        Allowed fields to PATCH for NCS provider type are (name,location)
      operationId: PatchRegion
      parameters:
      - description: ID of region to patch
        in: path
        name: id
        required: true
        type: string
      - description: Patch region
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/patchRegion'
      responses:
        "200":
          description: Region sucessfully patched.
          schema:
            $ref: '#/definitions/provider'
        "400":
          description: Bad Request</BR> Error Codes</BR>InvalidProviderTypeURI Invalid
            provider type URI</BR>ErrInvalidPatchData Invalid patch data.
          schema:
            $ref: '#/definitions/error'
    put:
      description: Updates a region. **Not implemented**
      operationId: UpdateRegion
      parameters:
      - description: ID of region to update
        in: path
        name: id
        required: true
        type: string
      - description: Update region
        in: body
        name: region
        required: true
        schema:
          $ref: '#/definitions/region'
      responses:
        "200":
          description: Region sucessfully updated.
          schema:
            $ref: '#/definitions/region'
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
  /regions/{id}/connection:
    delete:
      operationId: DeleteRegionConnection
      parameters:
      - description: ID of region
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: |
            Region connection successfully deleted.
            No response content.
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
      summary: NOT IMPLEMENTED
    get:
      description: Get region connection.
      operationId: GetRegionConnection
      parameters:
      - description: ID of region
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Region connection response
          schema:
            $ref: '#/definitions/regionConnection'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
      summary: NOT IMPLEMENTED
    post:
      description: Creates a new region connection
      operationId: CreateRegionConnection
      parameters:
      - description: ID of region
        in: path
        name: id
        required: true
        type: string
      - description: Add new region connection
        in: body
        name: regionConnection
        required: true
        schema:
          $ref: '#/definitions/createRegionConnection'
      responses:
        "201":
          description: New region connection sucessfully created.
          schema:
            $ref: '#/definitions/regionConnection'
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
      summary: NOT IMPLEMENTED
  /regions/{id}/connector-image:
    get:
      description: Generates connector-image url for the region. It requires the **administrator**
        role.
      operationId: getConnectorImage
      parameters:
      - description: ID of region to fetch the connector-image
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: generated connector-image url
          schema:
            format: url
            type: string
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
  /roles:
    get:
      description: Returns global roles.
      operationId: ListRoles
      responses:
        "200":
          description: List of roles
          schema:
            $ref: '#/definitions/roleList'
  /servers:
    get:
      description: Returns servers.
      operationId: GetServer
      parameters:
      - description: |
          Set of servers in this region.
        in: query
        name: regionUri
        required: false
        type: string
      - description: |
          Set of servers in this appliance.
        in: query
        name: applianceUri
        required: false
        type: string
      - description: |
          Set of servers in this zone.
        in: query
        name: zoneUri
        required: false
        type: string
      responses:
        "200":
          description: |
            Successful response.
            The query was performed successfully and the list of matching servers
            is returned.
            This list may be empty if no servers match the specified criteria.
          schema:
            $ref: '#/definitions/serverList'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
    post:
      description: Create/Register a server.
      operationId: CreateServer
      parameters:
      - in: body
        name: server
        required: true
        schema:
          $ref: '#/definitions/createServer'
      responses:
        "201":
          description: Server resource successfully registered.
          schema:
            $ref: '#/definitions/server'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
  /servers/{id}:
    delete:
      description: |
        Delete a server.
        Note that by default only servers created via the HPE OneSphere API can be
        subsequently deleted. HPE OneSphere managed servers (those that have
        an applianceUri) cannot be deleted via this operation (a '403' will be returned),
        unless the 'force' parameter is supplied and set to 'true'.
      operationId: DeleteServer
      parameters:
      - description: ID of the server to delete.
        in: path
        name: id
        required: true
        type: string
      - description: |
          Delete Server even if Delete operation is not allowed on this server by default,
          e.g. if this is a HPE OneSphere managed server.
        in: query
        name: force
        required: false
        type: boolean
      responses:
        "202":
          description: |
            Server accepted for deletion.
          schema:
            $ref: '#/definitions/server'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "403":
          description: Forbidden; not allowed to delete the server.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Server not found.
          schema:
            $ref: '#/definitions/error'
    get:
      description: Returns a server based on its ID.
      operationId: GetServerById
      parameters:
      - description: ID of the server to retrieve.
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: |
            Successful response.
            The query successfully retrieved a server based on ID.
          schema:
            $ref: '#/definitions/server'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Server not found.
          schema:
            $ref: '#/definitions/error'
    patch:
      consumes:
      - application/json-patch+json
      description: Update properties of a server.
      operationId: UpdateServer
      parameters:
      - description: ID of server to update.
        in: path
        name: id
        required: true
        type: string
      - description: List of server updates.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/updateServer'
      responses:
        "200":
          description: |
            Successfully updated the server.
            Note that a '202' response may also be returned, depending on the nature
            of the update.
          schema:
            $ref: '#/definitions/server'
        "202":
          description: |
            Server update successfully initiated.
            This response is returned if the update takes a significant amount of time.
          schema:
            $ref: '#/definitions/server'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Server not found.
          schema:
            $ref: '#/definitions/error'
      summary: NOT IMPLEMENTED
  /service-types:
    get:
      description: Returns all service types. It requires the **consumer** global
        role.
      operationId: FindServiceTypes
      responses:
        "200":
          description: List of service types
          schema:
            $ref: '#/definitions/serviceTypeList'
  /service-types/{id}:
    get:
      description: Return a service type based on its id. It requires the **consumer**
        global role.
      operationId: GetServiceTypeById
      parameters:
      - description: ID of service type to fetch
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Service type response
          schema:
            $ref: '#/definitions/serviceType'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
  /services:
    get:
      description: Returns services. It requires any project role or non-'consumer'
        global role.
      operationId: FindServices
      parameters:
      - description: |
          Filters the services returned.

          It supports equality
          comparison against one or more properties using a
          ``"name EQ value"`` syntax. Multiple comparisons can be combined
          using a ``"name1 EQ value1 AND name2 EQ value2"`` syntax.

          It supports comparison of **catalogUri** and **serviceTypeUri**.

          For example: ``query="serviceTypeUri EQ /rest/service-types/zone"``
        in: query
        name: query
        required: false
        type: string
      - description: |
          Filters the services returned.

          It performs a case insensitive comparison of the supplied string
          value with the **name** and **description** properties.

          For example: ``userQuery="kub"``
        in: query
        name: userQuery
        required: false
        type: string
      - description: |
          Return related resources:
            * `full` - Include all the details of the services
        enum:
        - full
        in: query
        name: view
        required: false
        type: string
      responses:
        "200":
          description: List of services
          examples:
            /rest/services?userQuery=Database management in single PHP file:
              catalogUri: /rest/catalogs/aws
              created: "2017-07-31T09:26:54Z"
              description: Database management in a single PHP file
              icon: ""
              id: 8bbc7abe-2ae1-a366-a4dd-f065618063a6
              modified: "2017-07-31T09:27:01Z"
              name: adminer
              regionUri: /rest/regions/f326e308-4b99-4b96-9b2c-835de6a5987c
              serviceTypeUri: /rest/service-types/vm
              sizeMB: 334
              uri: /rest/services/8bbc7abe-2ae1-a366-a4dd-f065618063a6
              versions:
              - latest
              zoneUri: /rest/zones/f0e474ba-f73d-405a-b158-31c210472eaa
            /rest/services?userQuery=adminer:
              catalogUri: /rest/catalogs/aws
              created: "2017-07-31T09:26:54Z"
              description: Database management in a single PHP file
              icon: ""
              id: 8bbc7abe-2ae1-a366-a4dd-f065618063a6
              modified: "2017-07-31T09:27:01Z"
              name: adminer
              regionUri: /rest/regions/f326e308-4b99-4b96-9b2c-835de6a5987c
              serviceTypeUri: /rest/service-types/vm
              sizeMB: 334
              uri: /rest/services/8bbc7abe-2ae1-a366-a4dd-f065618063a6
              versions: []
              zoneUri: /rest/zones/f0e474ba-f73d-405a-b158-31c210472eaa
            /rest/services?userQuery=latest:
              catalogUri: /rest/catalogs/aws
              created: "2017-07-31T09:26:54Z"
              description: Database management in a single PHP file
              icon: ""
              id: 8bbc7abe-2ae1-a366-a4dd-f065618063a6
              modified: "2017-07-31T09:27:01Z"
              name: adminer
              regionUri: /rest/regions/f326e308-4b99-4b96-9b2c-835de6a5987c
              serviceTypeUri: /rest/service-types/vm
              sizeMB: 334
              uri: /rest/services/8bbc7abe-2ae1-a366-a4dd-f065618063a6
              versions:
              - latest
              zoneUri: /rest/zones/f0e474ba-f73d-405a-b158-31c210472eaa
            /rest/services?view=full:
              catalog:
                name: VMware Templates
                uri: /rest/catalogs/vsphere
              catalogUri: /rest/catalogs/vsphere
              created: "2017-08-17T07:05:10Z"
              description: ubuntu with cloud init
              diskFormat: vmdk
              icon: ""
              id: 8dd410cc-4094-462a-813b-2a2bfd350d95
              modified: "2017-08-30T08:56:47Z"
              name: Ubuntu_cloud_init
              regionUri: /rest/regions/v3d6e308-4b99-4b96-9b2c-835de6a5987c
              serviceType:
                id: vm
                name: Virtual Machine
                uri: /rest/service-types/vm
              serviceTypeUri: /rest/service-types/vm
              sizeMB: 428
              uri: /rest/services/8dd410cc-4094-462a-813b-2a2bfd350d95
              versions: []
              zone:
                id: f0e474ba-f73d-405a-b158-31c210472eaa
                name: vmware
                uri: /rest/zones/f0e474ba-f73d-405a-b158-31c210472eaa
              zoneUri: /rest/zones/f0e474ba-f73d-405a-b158-31c210472eaa
            Filter services based on catalogUri: /rest/services?query=catalogUri+EQ+/rest/catalogs/kvm
            Filter services based on projectUri: /rest/services?query=projectUri+EQ+/rest/projectUri/930381ba921b47c39960371d4145e0d2
            Filter services based on serviceTypeUri: /rest/services?query=serviceTypeUri+EQ+/rest/service-types/vm
            Filter services based on userQuery: /rest/services?userQuery=<name|version|description>
            Filter services based on zoneUri: /rest/services?query=zoneUri+EQ+/rest/zones/v3d6e308-4b99-4b96-9b2c-835de6a5987c
          schema:
            $ref: '#/definitions/serviceList'
  /services/{id}:
    get:
      description: Returns a service based on its id. It requires any project role
        or non-'consumer' global role.
      operationId: GetServiceById
      parameters:
      - description: ID of service to fetch
        in: path
        name: id
        required: true
        type: string
      - description: |
          Return related resources:
            * `full` - Include all the details of the services
            * `deployment` - Return the zones to which the service can be deployed
        enum:
        - full
        - deployment
        in: query
        name: view
        required: false
        type: string
      responses:
        "200":
          description: Service response
          examples:
            /rest/services/8bbc7abe-2ae1-a366-a4dd-f065618063a6:
              catalogUri: /rest/catalogs/kvm
              created: "2017-07-31T09:26:54Z"
              description: Discovered from file /var/opt/pf9/imagelibrary/data/centos-6.6-cloudinit.qcow2
              icon: ""
              id: 8bbc7abe-2ae1-a366-a4dd-f065618063a6
              modified: "2017-07-31T09:27:01Z"
              name: centos-6.6-cloudinit.qcow2
              regionUri: /rest/regions/f326e308-4b99-4b96-9b2c-835de6a5987c
              serviceTypeUri: /rest/service-types/vm
              sizeMB: 334
              uri: /rest/services/8bbc7abe-2ae1-a366-a4dd-f065618063a6
              versions: []
            /rest/services/8dd410cc-4094-462a-813b-2a2bfd350d95?view=deployment:
              catalogUri: /rest/catalogs/vsphere
              created: "2017-08-17T07:05:10Z"
              deployment:
                zones:
                  created: "0001-01-01T00:00:00Z"
                  id: f0e474ba-f73d-405a-b158-31c210472eaa
                  metrics: null
                  modified: "0001-01-01T00:00:00Z"
                  name: vmware
                  osRegionName: vmware
                  p9RegionManagerTaskID: "-1"
                  providerUri: /rest/providers/new
                  regionUri: /rest/regions/9a8e7603-3a5e-4e96-968f-95707d05ef21
                  state: Enabled
                  status: Ok
                  uri: /rest/zones/f0e474ba-f73d-405a-b158-31c210472eaa
                  zoneTypeUri: /rest/zone-types/vcenter
              description: ubuntu with cloud init
              diskFormat: vmdk
              icon: ""
              id: 8dd410cc-4094-462a-813b-2a2bfd350d95
              modified: "2017-08-30T09:06:50Z"
              name: Ubuntu_cloud_init
              regionUri: /rest/regions/v3d6e308-4b99-4b96-9b2c-835de6a5987c
              serviceTypeUri: /rest/service-types/vm
              sizeMB: 428
              uri: /rest/services/8dd410cc-4094-462a-813b-2a2bfd350d95
              versions: []
              zoneUri: /rest/zones/f0e474ba-f73d-405a-b158-31c210472eaa
            /rest/services/8dd410cc-4094-462a-813b-2a2bfd350d95?view=full:
              catalog:
                id: vsphere
                name: VMware Templates
                uri: /rest/catalogs/vsphere
              catalogUri: /rest/catalogs/vsphere
              created: "2017-08-17T07:05:10Z"
              description: ubuntu with cloud init
              diskFormat: vmdk
              icon: ""
              id: 8dd410cc-4094-462a-813b-2a2bfd350d95
              modified: "2017-08-30T09:06:50Z"
              name: Ubuntu_cloud_init
              regionUri: /rest/regions/v3d6e308-4b99-4b96-9b2c-835de6a5987c
              serviceType:
                id: vm
                name: Virtual Machine
                uri: /rest/service-types/vm
              serviceTypeUri: /rest/service-types/vm
              sizeMB: 428
              uri: /rest/services/8dd410cc-4094-462a-813b-2a2bfd350d95
              versions: []
              zone:
                id: f0e474ba-f73d-405a-b158-31c210472eaa
                name: vmware
                uri: /rest/zones/f0e474ba-f73d-405a-b158-31c210472eaa
              zoneUri: /rest/zones/f0e474ba-f73d-405a-b158-31c210472eaa
          schema:
            $ref: '#/definitions/service'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
  /session:
    delete:
      description: Deletes cached data and tokens for the current session.
      operationId: DeleteSession
      responses:
        "204":
          description: Session deleted (or not found)
    get:
      description: Gets information for the current user.
      operationId: ReadSession
      parameters:
      - description: |
          Return related resources:
            * `full` - Include the related `user`
        enum:
        - full
        in: query
        name: view
        type: string
      responses:
        "200":
          description: Session response
          examples:
            basic:
              $ref: '#/definitions/session'
            view=full:
              $ref: '#/definitions/sessionFull'
          schema:
            $ref: '#/definitions/session'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error'
    post:
      description: |
        Authenticates a local user and generates an authorization token. This
        token should be used in subsequent HTTP requests as part of
        the "Authorization" header. For example:

        `Authorization: "Bearer <token>"`
      operationId: CreateSession
      parameters:
      - description: UserName and Password
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/createSession'
      responses:
        "200":
          description: Returns an authorization token.
          schema:
            $ref: '#/definitions/session'
        "400":
          description: Invalid userName/Password.
          schema:
            $ref: '#/definitions/error'
      security: []
  /session/idp:
    get:
      description: |
        **Not implemented**

        Gets the Identity Provider login URL for a userName.
      operationId: ReadSessionIdp
      parameters:
      - description: User Name of the User for which login context is needed.
        in: query
        name: userName
        required: true
        type: string
      responses:
        "200":
          description: Returns URL of identity provider, if configured.
          schema:
            $ref: '#/definitions/sessionIdp'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error'
  /session/sso:
    get:
      description: Get the redirect URL for a configured SSO provider
      operationId: GetSSOLogin
      responses:
        "302":
          description: Login URL (which will itself return more redirects)
        "404":
          description: SSO is not enabled or configured
    post:
      description: Callback for SSO login
      parameters:
      - description: The unscoped token
        in: query
        name: token
        type: string
      responses:
        "302":
          description: |
            Redirects back to the OneSphere UI. Location will include token and userUri
            as query parameters
  /status:
    get:
      description: Checks the service is running. It does not require authorization.
      operationId: ReadStatus
      responses:
        "200":
          description: Status response
          schema:
            $ref: '#/definitions/status'
  /tag-keys:
    get:
      description: Lists tag keys.
      operationId: ListTagKeys
      parameters:
      - description: |
          Return related resources:
            * `full` - include each tag-key's related `tags`
        enum:
        - full
        in: query
        name: view
        type: string
      responses:
        "200":
          description: List of tag keys
          schema:
            $ref: '#/definitions/tagKeyList'
    post:
      description: Create a tag key. It requires the **analyst** global role.
      operationId: CreateTagKey
      parameters:
      - description: New tag key
        in: body
        name: name
        required: true
        schema:
          $ref: '#/definitions/createTagKey'
      responses:
        "201":
          description: TagKey
          schema:
            $ref: '#/definitions/tagKey'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error'
  /tag-keys/{id}:
    delete:
      description: Delete a tag key and associated tags. It requires the **analyst**
        global role.
      operationId: DeleteTagKey
      parameters:
      - description: ID of tag key to delete
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Tag key deleted; no content
        "404":
          description: No matching tag key found
          schema:
            $ref: '#/definitions/error'
    get:
      description: Returns a tag key based on its id.
      operationId: GetTagKeyById
      parameters:
      - description: ID of tag key to fetch
        in: path
        name: id
        required: true
        type: string
      - description: |
          Return related resources:
            * `full` - Include the tag-keys related `tags`
        enum:
        - full
        in: query
        name: view
        type: string
      responses:
        "200":
          description: Tag key response
          schema:
            $ref: '#/definitions/tagKey'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
  /tags:
    get:
      description: Lists tags.
      operationId: ListTags
      parameters:
      - description: |
          Return related resources:
            * `full` - include each tags related `tag-key`
        enum:
        - full
        in: query
        name: view
        type: string
      responses:
        "200":
          description: List of tags
          schema:
            $ref: '#/definitions/tagList'
    post:
      description: Create a tag. It requires the **analyst** global role.
      operationId: CreateTag
      parameters:
      - description: New tag
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/createTag'
      responses:
        "201":
          description: Tag
          schema:
            $ref: '#/definitions/tag'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error'
  /tags/{id}:
    delete:
      description: Delete a tag. It requires the **analyst** global role.
      operationId: DeleteTag
      parameters:
      - description: ID of tag to delete
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Tag deleted; no content
        "404":
          description: No matching tag found
          schema:
            $ref: '#/definitions/error'
    get:
      description: Returns a tag based on its id. It requires the **consumer** global
        role.
      operationId: GetTagById
      parameters:
      - description: ID of tag to fetch
        in: path
        name: id
        required: true
        type: string
      - description: |
          Return related resources:
            * `full` - Include the tags related `tag-key`
        enum:
        - full
        in: query
        name: view
        type: string
      responses:
        "200":
          description: Tag response
          schema:
            $ref: '#/definitions/tag'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
  /users:
    get:
      description: Returns users.
      operationId: ListUsers
      parameters:
      - description: |
          Filters the users returned.

          It performs a case insensitive comparison of the supplied string
          value with the **name** and **email** properties.

          For example: ``userQuery="chr"``
        in: query
        name: userQuery
        required: false
        type: string
      responses:
        "200":
          description: List of users
          schema:
            $ref: '#/definitions/userList'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error'
    post:
      description: |
        Create a user. It requires the **administrator** or **project creator** global role.

        The password should be a minimum of 8 characters long.
      operationId: CreateUser
      parameters:
      - description: New user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/createUser'
      responses:
        "201":
          description: User
          schema:
            $ref: '#/definitions/user'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error'
  /users/{id}:
    delete:
      description: Delete a user. It requires the **administrator** or **project creator**
        global role.
      operationId: DeleteUser
      parameters:
      - description: Delete user
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: User sucessfully deleted.
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
    get:
      description: Returns a user based on its id. It requires the **administrator**
        or **project creator** global role, or matching user id.
      operationId: GetUserById
      parameters:
      - description: ID of user to fetch
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: User response
          schema:
            $ref: '#/definitions/user'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
    patch:
      description: |
        Update a user. It requires the **administrator** or **project creator** global role or matching user ID.

        If the password is updated it must be a minimum of 8 characters long.
      operationId: UpdateUser
      parameters:
      - description: ID of user to update
        in: path
        name: id
        required: true
        type: string
      - description: Update user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/updateUser'
      responses:
        "200":
          description: User sucessfully updated.
          schema:
            $ref: '#/definitions/user'
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error'
  /virtual-machine-profiles:
    get:
      description: Returns all virtual machine profiles. It requires any project role
        or non-'consumer' global role.
      operationId: FindVirtualMachineProfiles
      parameters:
      - description: Zone to filter virtual machine profiles by.
        in: query
        name: zoneUri
        required: false
        type: string
      - description: service to filter virtual machine profiles by.
        in: query
        name: serviceUri
        required: false
        type: string
      responses:
        "200":
          description: List of virtual machine profiles
          examples:
            Filter virtual machine profiles based on serviceUri: /rest/virtual-machine-profiles?query=serviceUri+EQ+/rest/services/2F8bbc7abe-2ae1-a366-a4dd-f065618063a6
            Filter virtual machine profiles based on serviceUri of service type zone and regionUri, Needed by serviceType of zone: /rest/virtual-machine-profiles?query=serviceUri+EQ+/rest/services/8103ddca-a81a-11e7-ba96-0242ac11000b+AND+regionUri+EQ+/rest/regions/51d443fc-f2b5-4964-bd28-17bf223f2b9b
            Filter virtual machine profiles based on zoneUri: /rest/virtual-machine-profiles?query=zoneUri+EQ+/rest/zones/b1d0b94b-b3e2-459f-95ed-a1b4d4645338
            Sample Output:
              cpuCount: 1
              created: "2017-08-23T14:03:50Z"
              description: t2.small
              diskSizeGB: 0
              id: 0d01e5ce-c948-415e-b7a0-123320875838
              memorySizeGB: 2
              modified: "2017-08-23T14:03:50Z"
              name: t2.small
              regionUri: /rest/regions/0781e5ce-c948-415e-b7a0-123320875567
              uri: /rest/virtual-machine-profiles/0d01e5ce-c948-415e-b7a0-123320875838
              zoneUri: /rest/zones/b1d0b94b-b3e2-459f-95ed-a1b4d4645338
          schema:
            $ref: '#/definitions/virtualMachineProfileList'
  /virtual-machine-profiles/{id}:
    get:
      description: Returns a virtual machine profile based on its id. It equires any
        project role or non-'consumer' global role.
      operationId: GetVirtualMachineProfileById
      parameters:
      - description: ID of virtual machine profile to fetch
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Virtual machine profile response
          schema:
            $ref: '#/definitions/virtualMachineProfile'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
  /volumes:
    get:
      description: Returns volumes. It requires any project role or non-'consumer'
        global role.
      operationId: FindVolumes
      parameters:
      - description: URI query string to prune volumes by.
        in: query
        name: query
        type: string
      - description: |
          Return related resources:
            * `full` - include zone, volume details.
        enum:
        - full
        in: query
        name: view
        type: string
      responses:
        "200":
          description: List of volumes
          examples:
            /rest/volumes:
              attachedMode: ""
              attachments: []
              created: 2018-03-12T10:30:30.000000
              id: c86f18f1-a611-470e-8a11-1645b70b63c7
              modified: 2018-03-12T10:30:36.000000
              name: volume-A
              projectUri: /rest/projects/bb20b2d5750642f4a76161ca4580604b
              regionUri: /rest/regions/v3d6e308-4b99-4b96-9b2c-835de6a5987c
              sizeGiB: 1
              state: Available
              status: Ok
              uri: /rest/volumes/83bd00ca-e46d-4be8-9841-ac315d0229d1
              zoneUri: /rest/zones/c2b6e308-4b99-4b96-9b2c-835de6a56a8c
            Filter deployments by projectUri: /rest/volumes?query=projectUri+EQ+/rest/projects/930381ba921b47c39960371d4145e0d2
            Filter volumes by status: /rest/volumes?query=state+EQ+Available
            Filter volumes by status and zoneUri: /rest/volumes?query=state+EQ+Available
              AND zoneUri+EQ+/rest/zones/c2b6e308-4b99-4b96-9b2c-835de6a56a8c
          schema:
            $ref: '#/definitions/volumeList'
    post:
      description: Creates a new volume. It requires any project role or the **administrator**
        or **project creator** global role.
      operationId: CreateVolume
      parameters:
      - description: Add new volume.
        in: body
        name: volume
        required: true
        schema:
          $ref: '#/definitions/createVolume'
      responses:
        "201":
          description: New volume sucessfully created.
          schema:
            $ref: '#/definitions/volume'
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
  /volumes/{id}:
    delete:
      description: Delete a volume. It requires any project role or the **administrator**
        or **project creator** global role.
      operationId: DeleteVolume
      parameters:
      - description: ID of volume to delete
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Volume deleted; no content
          examples:
            DELETE /rest/volumes/c86f18f1-a611-470e-8a11-1645b70b63c7: no content
        "404":
          description: No matching volume found
          schema:
            $ref: '#/definitions/error'
    get:
      description: Returns a volume based on its id. It requires any project role
        or non-'consumer' global role.
      operationId: GetVolumeById
      parameters:
      - description: ID of volume to fetch
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Volume response
          schema:
            $ref: '#/definitions/volume'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
    patch:
      consumes:
      - application/json-patch+json
      description: Updates a volume. **Requires any project role or 'administrator'
        or 'project creator' global role**. Allowed fields for PATCH of volumes are
        name(add,replace), size(add,replace)
      operationId: UpdateVolume
      parameters:
      - description: ID of volume to update
        in: path
        name: id
        required: true
        type: string
      - description: Update volume
        in: body
        name: volume
        required: true
        schema:
          $ref: '#/definitions/patchVolume'
      responses:
        "200":
          description: Volume sucessfully updated.
          schema:
            $ref: '#/definitions/volume'
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
  /zone-types:
    get:
      description: Returns all zone types.
      operationId: FindZoneTypes
      responses:
        "200":
          description: List of zone types
          schema:
            $ref: '#/definitions/zoneTypeList'
  /zone-types/{id}/resource-profiles:
    get:
      description: Returns all available resourceProfile for **vcenter zone type**.
        It requires the **administrator** role.
      operationId: FindResourceProfileName
      parameters:
      - description: ID of zone-type to fetch
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: List of resourceProfile
          schema:
            $ref: '#/definitions/resourceProfileList'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
        "501":
          description: Not Implemented.
          schema:
            $ref: '#/definitions/error'
  /zones:
    get:
      description: Returns zones.
      operationId: FindZones
      parameters:
      - description: |
          Filters the zones returned.

          It supports equality
          comparison against one or more properties using a
          ``"name EQ value"`` syntax. Multiple comparisons can be combined
          using a ``"name1 EQ value1 AND name2 EQ value2"`` syntax.

          It supports comparison of **providerUri**.

          For example: ``query="providerUri EQ /rest/providers/xxxx"``
        in: query
        name: query
        required: false
        type: string
      - description: The region URI to prune zones by.
        in: query
        name: regionUri
        required: false
        type: string
      - description: The provider URI to prune zones by.
        in: query
        name: providerUri
        required: false
        type: string
      - description: The appliance URI to prune zones by. **Not implemented**
        in: query
        name: applianceUri
        required: false
        type: string
      - description: |
          Return related resources:
            * `full` - Include all the details of the zones
        enum:
        - full
        in: query
        name: view
        type: string
      responses:
        "200":
          description: List of zones
          schema:
            $ref: '#/definitions/zoneList'
    post:
      description: Creates a new zone
      operationId: CreateZone
      parameters:
      - description: Add new zone
        in: body
        name: zone
        required: true
        schema:
          $ref: '#/definitions/createZone'
      responses:
        "202":
          description: New zone is accepted for creation.
          examples:
            zone:
              clusters:
              - created: "2017-08-09T22:06:49.064958385+05:30"
                datastores:
                - created: "2017-08-09T22:06:49.064958385+05:30"
                  id: datastore-d1
                  modified: "2017-08-09T22:06:49.06495863+05:30"
                  name: vn-datastore1
                  sizeGiB: "100"
                  state: Enabled
                  status: OK
                - created: "2017-08-09T22:06:49.064958385+05:30"
                  id: datastore-d2
                  modified: "2017-08-09T22:06:49.06495863+05:30"
                  name: vn-datastore2
                  sizeGiB: "200"
                  state: Enabled
                  status: OK
                error: ""
                id: domain-c51
                modified: "2017-08-09T22:06:49.06495863+05:30"
                name: Cluster1
                state: Enabled
                status: OK
              - created: "2017-08-09T22:06:49.064958385+05:30"
                datastores:
                - created: "2017-08-09T22:06:49.064958385+05:30"
                  id: datastore-d3
                  modified: "2017-08-09T22:06:49.06495863+05:30"
                  name: vn-datastore3
                  sizeGiB: "100"
                  state: Enabled
                  status: OK
                - created: "2017-08-09T22:06:49.064958385+05:30"
                  id: datastore-d4
                  modified: "2017-08-09T22:06:49.06495863+05:30"
                  name: vn-datastore4
                  sizeGiB: "200"
                  state: Enabled
                  status: OK
                error: ""
                id: domain-c52
                modified: "2017-08-09T22:06:49.06495863+05:30"
                name: Cluster2
                state: Disabled
                status: Disabled
              created: "2017-08-09T22:06:49.064958385+05:30"
              esxLcmTask:
                associatedResourceInstanceId: ""
                associatedResourceInstanceName: ""
                associatedResourceInstanceUri: ""
                associatedResourceType: zone
                childTasks:
                - 00ccc1fc-b7f1-11e7-bb3f-0242ac110003
                created: "2017-10-23T12:52:18.356685887Z"
                description: Update inventory element
                eTag: ""
                error:
                  canForce: false
                  data: null
                  details: ""
                  errorCode: ""
                  errorSource: ""
                  message: ""
                  nestedErrors: null
                  recommendedActions: null
                inUse: false
                isPartialSuccess: false
                modified: "2017-10-23T12:53:18.742575801Z"
                name: HCOE_ISM_INVENTORY_UPDATE
                operationState: ""
                parentId: ""
                percentComplete: 100
                progressUpdates: []
                state: Completed
                status: OK
                tag: ""
                taskFailed: false
                taskType: ""
                terminalState: false
                type: infrastructure-system-task
                uri: /rest/infrastructure-system-tasks/009fc27b-b7f1-11e7-bb3f-0242ac110003
                uuid: 009fc27b-b7f1-11e7-bb3f-0242ac110003
                weight: 1
              id: 2b5a8db7-e145-4ef9-b7f2-9b2d45976cd4
              inTransitClusters: []
              managed: false
              metrics: []
              modified: "2017-08-09T22:06:49.06495863+05:30"
              name: Zone-VMware-1
              providerUri: /rest/providers/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd1
              rates:
              - metricName: ncs.resource.annual.cost
                rateValue: 108989.833333325
              - metricName: resource.cores.allocation
                rateValue: 0.002
              - metricName: resource.memory.allocation
                rateValue: 0.006
              - metricName: resource.storage.allocation
                rateValue: 9.722e-06
              regionUri: /rest/regions/3caa8db7-e145-4ef9-b7f2-9b2d45976cd1
              state: Disabled
              status: OK
              uri: /rest/zones/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd4
              zoneTypeUri: /rest/zone-types/vcenter
            zone-kvm:
              created: "2017-08-09T22:06:49.064958385+05:30"
              id: 2b5a8db7-e145-4ef9-b7f2-9b2d45976cd5
              inTransitKvmServers: []
              kvmServers: []
              managed: false
              metrics: []
              modified: "2017-08-09T22:06:49.06495863+05:30"
              name: Zone-KVM-1
              providerUri: /rest/providers/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd2
              rates: []
              regionUri: /rest/regions/3caa8db7-e145-4ef9-b7f2-9b2d45976cd2
              state: Enabled
              status: OK
              uri: /rest/zones/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd5
              zoneTypeUri: /rest/zone-types/kvm
          schema:
            $ref: '#/definitions/zone'
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
  /zones/{id}:
    delete:
      description: Deletes a zone
      operationId: DeleteZone
      parameters:
      - description: ID of zone to delete
        in: path
        name: id
        required: true
        type: string
      - description: Zones may be in an odd state. Force will attempt to delete again
          no matter the state.
        in: query
        name: force
        required: false
        type: boolean
      responses:
        "202":
          description: Zone accepted for deletion
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
    get:
      description: Returns a zone based on its id.
      operationId: GetZoneById
      parameters:
      - description: ID of zone to fetch
        in: path
        name: id
        required: true
        type: string
      - description: Whether to return related content.
        enum:
        - full
        in: query
        name: view
        type: string
      responses:
        "200":
          description: Zone response
          examples:
            zone:
              clusters:
              - created: "2017-08-09T22:06:49.064958385+05:30"
                datastores:
                - created: "2017-08-09T22:06:49.064958385+05:30"
                  id: datastore-d1
                  modified: "2017-08-09T22:06:49.06495863+05:30"
                  name: vn-datastore1
                  sizeGiB: "100"
                  state: Enabled
                  status: OK
                  type: vsan
                - created: "2017-08-09T22:06:49.064958385+05:30"
                  id: datastore-d2
                  modified: "2017-08-09T22:06:49.06495863+05:30"
                  name: vn-datastore2
                  sizeGiB: "200"
                  state: Enabled
                  status: OK
                  type: vsan
                error: ""
                id: domain-c51
                modified: "2017-08-09T22:06:49.06495863+05:30"
                name: Cluster1
                state: Enabled
                status: OK
              - created: "2017-08-09T22:06:49.064958385+05:30"
                datastores:
                - created: "2017-08-09T22:06:49.064958385+05:30"
                  id: datastore-d3
                  modified: "2017-08-09T22:06:49.06495863+05:30"
                  name: vn-datastore3
                  sizeGiB: "100"
                  state: Enabled
                  status: OK
                  type: vsan
                - created: "2017-08-09T22:06:49.064958385+05:30"
                  id: datastore-d4
                  modified: "2017-08-09T22:06:49.06495863+05:30"
                  name: vn-datastore4
                  sizeGiB: "200"
                  state: Enabled
                  status: OK
                  type: vsan
                error: ""
                id: domain-c52
                modified: "2017-08-09T22:06:49.06495863+05:30"
                name: Cluster2
                state: Disabled
                status: Disabled
              created: "2017-08-09T22:06:49.064958385+05:30"
              esxLcmTask:
                associatedResourceInstanceId: ""
                associatedResourceInstanceName: ""
                associatedResourceInstanceUri: ""
                associatedResourceType: zone
                childTasks:
                - 00ccc1fc-b7f1-11e7-bb3f-0242ac110003
                created: "2017-10-23T12:52:18.356685887Z"
                description: Update inventory element
                eTag: ""
                error:
                  canForce: false
                  data: null
                  details: ""
                  errorCode: ""
                  errorSource: ""
                  message: ""
                  nestedErrors: null
                  recommendedActions: null
                inUse: false
                isPartialSuccess: false
                modified: "2017-10-23T12:53:18.742575801Z"
                name: HCOE_ISM_INVENTORY_UPDATE
                operationState: ""
                parentId: ""
                percentComplete: 100
                progressUpdates: []
                state: Completed
                status: OK
                tag: ""
                taskFailed: false
                taskType: ""
                terminalState: false
                type: infrastructure-system-task
                uri: /rest/infrastructure-system-tasks/009fc27b-b7f1-11e7-bb3f-0242ac110003
                uuid: 009fc27b-b7f1-11e7-bb3f-0242ac110003
                weight: 1
              id: 2b5a8db7-e145-4ef9-b7f2-9b2d45976cd4
              inTransitClusters: []
              managed: false
              metrics: []
              modified: "2017-08-09T22:06:49.06495863+05:30"
              name: Zone-VMware-1
              providerUri: /rest/providers/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd1
              regionUri: /rest/regions/3caa8db7-e145-4ef9-b7f2-9b2d45976cd1
              resourceProfile:
                name: SY480-Gen9-Low-Density
              state: Disabled
              status: OK
              uri: /rest/zones/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd4
              zoneTypeUri: /rest/zone-types/vcenter
            zone-full-view:
              clusters:
              - created: "2017-08-09T22:06:49.064958385+05:30"
                datastores:
                - created: "2017-08-09T22:06:49.064958385+05:30"
                  id: datastore-d1
                  modified: "2017-08-09T22:06:49.06495863+05:30"
                  name: vn-datastore1
                  sizeGiB: "100"
                  state: Enabled
                  status: OK
                  type: vsan
                - created: "2017-08-09T22:06:49.064958385+05:30"
                  id: datastore-d2
                  modified: "2017-08-09T22:06:49.06495863+05:30"
                  name: vn-datastore2
                  sizeGiB: "200"
                  state: Enabled
                  status: OK
                  type: vsan
                error: ""
                id: domain-c51
                modified: "2017-08-09T22:06:49.06495863+05:30"
                name: Cluster1
                state: Enabled
                status: OK
              - created: "2017-08-09T22:06:49.064958385+05:30"
                datastores:
                - created: "2017-08-09T22:06:49.064958385+05:30"
                  id: datastore-d3
                  modified: "2017-08-09T22:06:49.06495863+05:30"
                  name: vn-datastore3
                  sizeGiB: "100"
                  state: Enabled
                  status: OK
                  type: vsan
                - created: "2017-08-09T22:06:49.064958385+05:30"
                  id: datastore-d4
                  modified: "2017-08-09T22:06:49.06495863+05:30"
                  name: vn-datastore4
                  sizeGiB: "200"
                  state: Enabled
                  status: OK
                  type: vsan
                error: ""
                id: domain-c52
                modified: "2017-08-09T22:06:49.06495863+05:30"
                name: Cluster2
                state: Disabled
                status: Disabled
              created: "2017-08-09T22:06:49.064958385+05:30"
              esxLcmTask:
                associatedResourceInstanceId: ""
                associatedResourceInstanceName: ""
                associatedResourceInstanceUri: ""
                associatedResourceType: zone
                childTasks:
                - 00ccc1fc-b7f1-11e7-bb3f-0242ac110003
                created: "2017-10-23T12:52:18.356685887Z"
                description: Update inventory element
                eTag: ""
                error:
                  canForce: false
                  data: null
                  details: ""
                  errorCode: ""
                  errorSource: ""
                  message: ""
                  nestedErrors: null
                  recommendedActions: null
                inUse: false
                isPartialSuccess: false
                modified: "2017-10-23T12:53:18.742575801Z"
                name: HCOE_ISM_INVENTORY_UPDATE
                operationState: ""
                parentId: ""
                percentComplete: 100
                progressUpdates: []
                state: Completed
                status: OK
                tag: ""
                taskFailed: false
                taskType: ""
                terminalState: false
                type: infrastructure-system-task
                uri: /rest/infrastructure-system-tasks/009fc27b-b7f1-11e7-bb3f-0242ac110003
                uuid: 009fc27b-b7f1-11e7-bb3f-0242ac110003
                weight: 1
              id: 2b5a8db7-e145-4ef9-b7f2-9b2d45976cd4
              inTransitClusters: []
              managed: true
              metrics: []
              modified: "2017-08-09T22:06:49.06495863+05:30"
              name: Zone-VMware-1
              provider:
                created: "2017-08-09T22:06:49.064958385+05:30"
                id: 2b5a8db7-e145-4ef9-b7f2-9b2d45976cd1
                metrics: []
                modified: "2017-08-09T22:06:49.06495863+05:30"
                name: Provider-VMware-1
                state: Disabled
                status: OK
                uri: /rest/providers/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd1
              providerUri: /rest/providers/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd1
              rates:
              - active: true
                created: "2017-08-09T22:06:49Z"
                deleted: ""
                effectiveDate: "2008-08-09T00:00:00Z"
                metricName: resource.cores.allocation
                name: VM CPU Count (default)
                rateUri: /rest/rates/28418b5c-05e3-4340-92b8-36713f0027e1
                rateValue: 0.002
                resourceTerminated: ""
                resourceUri: /rest/zones/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd4
                unit: cores
              - active: true
                created: "2017-08-09T22:06:49Z"
                deleted: ""
                effectiveDate: "2018-08-09T00:00:00Z"
                metricName: ncs.resource.annual.cost
                name: NCS Resource Annual Cost (default)
                rateUri: /rest/rates/32df9bfb-83d8-4663-9858-10db0517bbf0
                rateValue: 108989.833333325
                resourceTerminated: ""
                resourceUri: /rest/zones/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd4
                unit: Year
              - active: true
                created: "2017-08-09T22:06:49Z"
                deleted: ""
                effectiveDate: "2018-08-09T00:00:00Z"
                metricName: resource.memory.allocation
                name: VM Memory GB (default)
                rateUri: /rest/rates/82296ca1-0b75-43ae-8f84-a02526dbdcb7
                rateValue: 0.006
                resourceTerminated: ""
                resourceUri: /rest/zones/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd4
                unit: GB
              - active: true
                created: "2017-08-09T22:06:49Z"
                deleted: ""
                effectiveDate: "2018-08-09T00:00:00Z"
                metricName: resource.storage.allocation
                name: VM Disk GB (default)
                rateUri: /rest/rates/da47ece6-8c6e-4a63-a387-d74403cf8d3c
                rateValue: 9.722e-06
                resourceTerminated: ""
                resourceUri: /rest/zones/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd4
                unit: GB
              region:
                created: "2017-08-09T22:06:49.064958385+05:30"
                id: 3caa8db7-e145-4ef9-b7f2-9b2d45976cd1
                metrics: []
                modified: "2017-08-09T22:06:49.06495863+05:30"
                name: Region-VMware-1
                providerUri: /rest/providers/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd1
                status: OK
                type: ""
                uri: /rest/regions/3caa8db7-e145-4ef9-b7f2-9b2d45976cd1
              regionUri: /rest/regions/3caa8db7-e145-4ef9-b7f2-9b2d45976cd1
              resourceProfile:
                name: SY480-Gen9-Low-Density
              state: Disabled
              status: OK
              uri: /rest/zones/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd4
              zoneType:
                created: "2017-08-09T22:06:49.064958385+05:30"
                id: vcenter
                modified: "2017-08-09T22:06:49.06495863+05:30"
                name: VMware-vcenter-1
                uri: /rest/zone-types/vcenter
              zoneTypeUri: /rest/zone-types/vcenter
            zone-kvm:
              created: "2017-08-09T22:06:49.064958385+05:30"
              id: 2b5a8db7-e145-4ef9-b7f2-9b2d45976cd5
              inTransitKvmServers: []
              kvmServers:
              - roles:
                - ImageLibrary
                - BlockStorage
                serverUri: /rest/servers/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd3
                state: Enabled
              - roles: []
                serverUri: /rest/servers/3caa8db7-e145-4ef9-b7f2-9b2d45976cd1
                state: Enabled
              managed: false
              metrics: []
              modified: "2017-08-09T22:06:49.06495863+05:30"
              name: Zone-KVM-1
              providerUri: /rest/providers/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd2
              rates: []
              regionUri: /rest/regions/3caa8db7-e145-4ef9-b7f2-9b2d45976cd2
              state: Enabled
              status: OK
              uri: /rest/zones/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd5
              zoneTypeUri: /rest/zone-types/kvm
          schema:
            $ref: '#/definitions/zone'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
    patch:
      description: Updates a zone
      operationId: UpdateZone
      parameters:
      - description: ID of zone to update
        in: path
        name: id
        required: true
        type: string
      - description: Update zone
        in: body
        name: zone
        required: true
        schema:
          $ref: '#/definitions/updateZone'
      responses:
        "200":
          description: Zone sucessfully updated.
          examples:
            zone:
              clusters:
              - created: "2017-08-09T22:06:49.064958385+05:30"
                datastores:
                - created: "2017-08-09T22:06:49.064958385+05:30"
                  id: datastore-d1
                  modified: "2017-08-09T22:06:49.06495863+05:30"
                  name: vn-datastore1
                  sizeGiB: "100"
                  state: Enabled
                  status: OK
                - created: "2017-08-09T22:06:49.064958385+05:30"
                  id: datastore-d2
                  modified: "2017-08-09T22:06:49.06495863+05:30"
                  name: vn-datastore2
                  sizeGiB: "200"
                  state: Enabled
                  status: OK
                error: ""
                id: domain-c51
                modified: "2017-08-09T22:06:49.06495863+05:30"
                name: Cluster1
                state: Enabled
                status: OK
              - created: "2017-08-09T22:06:49.064958385+05:30"
                datastores:
                - created: "2017-08-09T22:06:49.064958385+05:30"
                  id: datastore-d3
                  modified: "2017-08-09T22:06:49.06495863+05:30"
                  name: vn-datastore3
                  sizeGiB: "100"
                  state: Enabled
                  status: OK
                - created: "2017-08-09T22:06:49.064958385+05:30"
                  id: datastore-d4
                  modified: "2017-08-09T22:06:49.06495863+05:30"
                  name: vn-datastore4
                  sizeGiB: "200"
                  state: Enabled
                  status: OK
                error: ""
                id: domain-c52
                modified: "2017-08-09T22:06:49.06495863+05:30"
                name: Cluster2
                state: Disabled
                status: Disabled
              created: "2017-08-09T22:06:49.064958385+05:30"
              esxLcmTask:
                associatedResourceInstanceId: ""
                associatedResourceInstanceName: ""
                associatedResourceInstanceUri: ""
                associatedResourceType: zone
                childTasks:
                - 00ccc1fc-b7f1-11e7-bb3f-0242ac110003
                created: "2017-10-23T12:52:18.356685887Z"
                description: Update inventory element
                eTag: ""
                error:
                  canForce: false
                  data: null
                  details: ""
                  errorCode: ""
                  errorSource: ""
                  message: ""
                  nestedErrors: null
                  recommendedActions: null
                inUse: false
                isPartialSuccess: false
                modified: "2017-10-23T12:53:18.742575801Z"
                name: HCOE_ISM_INVENTORY_UPDATE
                operationState: ""
                parentId: ""
                percentComplete: 100
                progressUpdates: []
                state: Completed
                status: OK
                tag: ""
                taskFailed: false
                taskType: ""
                terminalState: false
                type: infrastructure-system-task
                uri: /rest/infrastructure-system-tasks/009fc27b-b7f1-11e7-bb3f-0242ac110003
                uuid: 009fc27b-b7f1-11e7-bb3f-0242ac110003
                weight: 1
              id: 2b5a8db7-e145-4ef9-b7f2-9b2d45976cd4
              inTransitClusters: []
              managed: false
              metrics: []
              modified: "2017-08-09T22:06:49.06495863+05:30"
              name: Zone-VMware-1
              providerUri: /rest/providers/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd1
              rates: []
              regionUri: /rest/regions/3caa8db7-e145-4ef9-b7f2-9b2d45976cd1
              state: Enabled
              status: OK
              uri: /rest/zones/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd4
              zoneTypeUri: /rest/zone-types/vcenter
            zone-kvm:
              created: "2017-08-09T22:06:49.064958385+05:30"
              id: 2b5a8db7-e145-4ef9-b7f2-9b2d45976cd5
              inTransitKvmServers: []
              kvmServers:
              - roles:
                - ImageLibrary
                - BlockStorage
                serverUri: /rest/servers/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd3
                state: Enabled
              - roles: []
                serverUri: /rest/servers/3caa8db7-e145-4ef9-b7f2-9b2d45976cd1
                state: Enabled
              managed: false
              metrics: []
              modified: "2017-08-09T22:06:49.06495863+05:30"
              name: Zone-KVM-1
              providerUri: /rest/providers/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd2
              rates: []
              regionUri: /rest/regions/3caa8db7-e145-4ef9-b7f2-9b2d45976cd2
              state: Enabled
              status: OK
              uri: /rest/zones/2b5a8db7-e145-4ef9-b7f2-9b2d45976cd5
              zoneTypeUri: /rest/zone-types/kvm
          schema:
            $ref: '#/definitions/zone'
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
  /zones/{id}/actions:
    post:
      description: Peforms an action to the zone. It requires the **administrator**
        role.
      operationId: ActOnZone
      parameters:
      - description: ID of zone to act on
        in: path
        name: id
        required: true
        type: string
      - description: Action to perform
        in: body
        name: action
        required: true
        schema:
          $ref: '#/definitions/zoneAction'
      responses:
        "202":
          description: Zone action sucessfully initiated. No content.
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
  /zones/{id}/appliance-image:
    get:
      description: Generates appliance-image url for the zone
      operationId: appliance-image
      parameters:
      - description: ID of zone to fetch the appliance-image
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: generated appliance-image url
          schema:
            format: url
            type: string
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
  /zones/{id}/connections:
    get:
      description: Gets the list of connection for the zone. It requires the **administrator**
        role.
      operationId: zoneConnectionInstances
      parameters:
      - description: ID of zone to fetch the list of connection for the zone
        in: path
        name: id
        required: true
        type: string
      - description: Type to filter connection by.
        in: query
        name: uuid
        required: false
        type: string
      responses:
        "200":
          description: Gets the list of connection for the zone
          schema:
            $ref: '#/definitions/zoneConnectionList'
        "404":
          description: Not Found.
          schema:
            $ref: '#/definitions/error'
    post:
      description: Peforms an action to the zone. It requires the **administrator**
        role.
      operationId: RegisterZoneConnection
      parameters:
      - description: ID of zone to act on
        in: path
        name: id
        required: true
        type: string
      - description: Create a new connection instance for the zone
        in: body
        name: zoneConnection
        required: true
        schema:
          $ref: '#/definitions/createZoneConnection'
      responses:
        "202":
          description: New zoneConnectioninstance successfully created
          schema:
            $ref: '#/definitions/zoneConnection'
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
  /zones/{id}/connections/{uuid}:
    delete:
      description: Deletes a connection instance of the zone
      operationId: UnregisterZoneConnection
      parameters:
      - description: ID of zone
        in: path
        name: id
        required: true
        type: string
      - description: ID of connection
        in: path
        name: uuid
        required: true
        type: string
      responses:
        "202":
          description: connection of the zone accepted for deletion
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
    patch:
      description: Updates a connection of the zone.
      operationId: UpdateZoneConnection
      parameters:
      - description: ID of zone
        in: path
        name: id
        required: true
        type: string
      - description: ID of connection
        in: path
        name: uuid
        required: true
        type: string
      - description: Update connection
        in: body
        name: zoneConnection
        required: true
        schema:
          properties:
            op:
              description: |
                The operation to take on the specified property. See: https://tools.ietf.org/html/rfc6902#section-4
              enum:
              - add
              - replace
              - remove
              type: string
            path:
              description: The path to the property to operate on.
              type: string
            value:
              description: The new value (valid with op=replace)
              type: object
          type: object
      responses:
        "200":
          description: vCenter Gateway sucessfully updated for the zone.
          schema:
            $ref: '#/definitions/zoneConnection'
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
  /zones/{id}/task-status:
    get:
      description: Returns the status of the task for the zone
      operationId: ZoneTaskStatus
      parameters:
      - description: ID of zone to fetch the task details
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Gets the task status for zone
          examples:
            esxLcmTask:
              associatedResourceInstanceId: ""
              associatedResourceInstanceName: ""
              associatedResourceInstanceUri: ""
              associatedResourceType: zone
              childTasks:
              - 00ccc1fc-b7f1-11e7-bb3f-0242ac110003
              created: "2017-10-23T12:52:18.356685887Z"
              description: Update inventory element
              eTag: ""
              error:
                canForce: false
                data: null
                details: ""
                errorCode: ""
                errorSource: ""
                message: ""
                nestedErrors: null
                recommendedActions: null
              inUse: false
              isPartialSuccess: false
              modified: "2017-10-23T12:53:18.742575801Z"
              name: HCOE_ISM_INVENTORY_UPDATE
              operationState: ""
              parentId: ""
              percentComplete: 100
              progressUpdates:
              - statusUpdate: 'Total capacity requested is 10 '
                timeStamp: "2017-12-07T03:53:02.127808703Z"
              - statusUpdate: Total capacity successfully added is 5
                timeStamp: "2017-12-07T03:53:02.132827168Z"
              state: Completed
              status: OK
              tag: ""
              taskFailed: false
              taskType: ""
              terminalState: false
              type: infrastructure-system-task
              uri: /rest/infrastructure-system-tasks/009fc27b-b7f1-11e7-bb3f-0242ac110003
              uuid: 009fc27b-b7f1-11e7-bb3f-0242ac110003
              weight: 1
          schema:
            $ref: '#/definitions/taskResource'
        "400":
          description: Bad request.
          schema:
            $ref: '#/definitions/error'
produces:
- application/json
- application/vnd.hpe.v1+json
schemes:
- https
security:
- Bearer: []
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"

